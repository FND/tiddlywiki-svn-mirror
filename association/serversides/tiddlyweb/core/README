
TiddlyWeb Home Site: http://tiddlyweb.peermore.com/

See also: http://tiddlywiki.org/wiki/Dev:TiddlyWeb

TiddlyWeb, aka mo'ass, is a reference implementation of an ideal
server side implementation for TiddlyWiki. It attempts to provide
a tested, documented, and clear implementation of several facets
that make up a good server side:

* transparent system and code suitable for porting to other
  languages (where use specific optimzations will hopefully occur)
* an abstract model for authentication and authorization
* an implementation of authenticated recipes and bags allowing
  the conrolled access to dynamically created collections of
  tiddlers
* clean HTTP API based on REST principles
* test driven description and development

The initial implementation is not designed to be highly performant
nor especially scalable. The system is designed so that parts
that are not optimal for a particular installation can be easily
improved or swapped out.

REQUIREMENTS:

* Python 2.4 or 2.5
* selector: http://lukearno.com/projects/selector/
* simplejson: http://undefined.org/python/#simplejson
* BeautifulSoup (for importing wikis):
  http://www.crummy.com/software/BeautifulSoup/
* html5lib (also used for importing wikis due to changes
  in BeautifulSoup):
  http://code.google.com/p/html5lib/
* wikklytext (provides server side rendering of wikitext to
  HTML): http://wikklytext.com/wiki/InstallPythonPackage.html

If you have downloaded a tarball of TiddlyWeb and you have Python's
setuptools, running the following command will automatically install
TiddlyWeb and its requiremens to the usual locations (you most likely
will need to be an administrative user for this to work):

   python setup.py install

If you are using TiddlyWeb from source checked out from the
http://svn.tiddlywiki.org/ repository, you can install the necessary
requirements by hand:

Selector, simplejson and BeautifulSoup can be installed with
easy_install, which either comes with your python distribution and
should be on your path, or is part of setuptools which you can
install. See

  http://peak.telecommunity.com/DevCenter/EasyInstall

and

  http://peak.telecommunity.com/DevCenter/setuptools

for more information on easy_install and setuptools if you are not
familiar with them.

For more information on what to do with TiddlyWeb see:

docs/NOTES: For some comments on the implementation.
docs/TODO: For tasks that need to be done.
docs/RUN: To run this installation in place with some sample data.
docs/TESTING: Information about the tests located in the test directory.
docs/COOKBOOK: A guide to how to setup a TiddlyWeb server with your own content.
docs/EXTEND: Tools and methods for extending TiddlyWeb to do more.
index.cgi: A sample of how to make TiddlyWeb run as a CGI with a web server
    such as Apache.
mod_python.py: A sample of hos to make TiddlyWeb run under mod_python and Apache.

See http://tiddlyweb.peermore.com/ for a TiddlyWiki generated by TiddlyWeb
containing some TiddlyWeb documentation.

See http://svn.tiddlywiki.org/Trunk/contributors/ChrisDent/experimental/tiddlyweb-plugins/
for some samples of plugins that TiddlyWeb can use with itself.

If you have questions or contributions on making this work
please post the TiddlyWikiDev group at google groups:

  http://groups.google.com/group/TiddlyWikiDev

or contact Chris Dent <cdent@peermore.com>.
