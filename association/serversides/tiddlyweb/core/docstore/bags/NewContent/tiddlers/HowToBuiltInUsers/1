modifier: ChrisDent
created: 
modified: 200808291100
tags: 

''Note'': This is a TiddlyWebHalfStep.

See also NeedForUserOpenIDAssociations.

TiddlyWeb has an optional built in [[User]] database. It can be used by credentials extractors and challengers that work in terms of a username and password. The {{{simple_cookie}}} [[Challenger]] takes a username and password and validates against the database. The {{{http_basic}}} CredentialsExtractor looks for Authorization Basic header information and validates them against the database.

The manager script can be used for creating users, or the {{{tiddlyweb}}} [[Python]] code can be imported into other scripts to directly manipulate user data.

{{{
    ./manager adduser <username> <password>
}}}

Creates the user with <username> and <password>.

There are two ways to use these users (neither of which is particular secure because a password gets passed over the wire in an insecure fashion):

# Cause the user to interact with the {{{/challenger/simple_cookie}}} to enter and validate username and password and then generate a cookie available for future requests.
# In every request send the username and password in an HTTP Basic Authorize header.
