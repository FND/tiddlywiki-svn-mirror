## Script (Python) "get_revisions"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=root=None
##title=
##
if root: context = root
path = '/'.join(context.getPhysicalPath())

MAX_REVISIONS = 30

id = container.scripts.sanitize_id(context.REQUEST.get('id'))

try: tiddler = context.tiddlers[id]
except: return '-'

tags = getattr(tiddler, 'tags', '')
if 'private' in tags.split() and 'Authenticated' not in context.REQUEST.AUTHENTICATED_USER.getRoles():
  return '-'
if 'onlyAdmin' in tags.split() and 'Manager' not in context.REQUEST.AUTHENTICATED_USER.getRoles():
  return '-'

revisions = [
  container.scripts.get_modified(tiddler.HistoricalRevisions[rev['key']]) + ' ' + rev['key']
  for rev in tiddler.manage_change_history()
  if not hasattr(tiddler.HistoricalRevisions[rev['key']], 'ignore_revision')][:MAX_REVISIONS]

return '\n'.join(revisions)
