## Script (Python) "get"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=root=None
##title=
##
if root: context = root
path = '/'.join(context.getPhysicalPath())

req = context.REQUEST
revision = req.get('revision', None)
if(req.get('title') is None):
    context.REQUEST.RESPONSE.setStatus(404, 'attempt to get a tiddler without passing title!')
    return
id = container.scripts.sanitize_id(req.get('title'))

try: tiddler = root.tiddlers[id]
except:
    try: tiddler = container.tiddlers[id]
    except:
        context.REQUEST.RESPONSE.setStatus(404) # detail.value);
        return

# FIXME permission denied
tags = getattr(tiddler, 'tags', '')
if 'private' in tags.split() and 'Authenticated' not in context.REQUEST.AUTHENTICATED_USER.getRoles():
    context.REQUEST.RESPONSE.setStatus(403, "Log in to see private tiddlers")
    return
if 'onlyAdmin' in tags.split() and 'Manager' not in context.REQUEST.AUTHENTICATED_USER.getRoles():
    context.REQUEST.RESPONSE.setStatus(403, "Log in to see onlyAdmin tiddlers")
    return

latestrevision = revision
context.REQUEST.set('last_transaction', 200) # Force it to go further back in history
for rev in tiddler.manage_change_history():
    if not hasattr(tiddler.HistoricalRevisions[rev['key']],'ignore_revision'):
        latestrevision = rev['key']
        break

currenttiddler = tiddler
if revision:
    try: tiddler = tiddler.HistoricalRevisions[revision]
    except: 
        context.REQUEST.RESPONSE.setStatus(404)
        return
else:
    revision = latestrevision

attribs = []
attribs.append('tiddler="%s"' % currenttiddler.HistoricalRevisions[latestrevision].title.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;').replace('"', '&quot;'))
attribs.append('modifier="%s"' % getattr(tiddler, 'modifier', ''))
attribs.append('modified="%s"' % container.scripts.get_modified(tiddler))
if hasattr(tiddler, 'created'):
    attribs.append('created="%s"' % tiddler.created)
else:
    attribs.append('created="%s"' % modified)
attribs.append('tags="%s"' % tiddler.tags.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;').replace('"', '&quot;'))
attribs.append('revision="%s"' % revision)
if currenttiddler.HistoricalRevisions[revision].title != currenttiddler.HistoricalRevisions[latestrevision].title:
    attribs.append('oldtitle="%s"' % currenttiddler.HistoricalRevisions[revision].title.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;').replace('"', '&quot;'))

return '<div ' + ' '.join(attribs) + '>' + tiddler(context, context.REQUEST).replace('\\', '\\s').replace('\n', '\\n').replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;').replace('"', '&quot;') + '</div>'
