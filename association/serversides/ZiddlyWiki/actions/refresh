## Script (Python) "refresh"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=root=None
##title=
##
context = root

req = context.REQUEST

try:
  latest = int(req.get('latest'))
except:
  return ''
else:
  updated = [str(container.get_timestamp(root=root))]

  tiddler = []
  for tiddlerid in context.tiddlers.objectIds('DTML Document'):
    try: tiddler = context.tiddlers[tiddlerid]
    except: continue
    tags = tiddler.tags.split()
    if 'deleted' in tags:
      continue
    if 'private' in tags and 'Authenticated' not in req.AUTHENTICATED_USER.getRoles():
      continue
    if 'onlyAdmin' in tags and 'Manager' not in req.AUTHENTICATED_USER.getRoles():
      continue
    if int(float(tiddler.bobobase_modification_time()) * 100) > latest:
      context.REQUEST.set('last_transaction', 200) # Force it to go further back in history
      for rev in tiddler.manage_change_history():
          if not hasattr(tiddler.HistoricalRevisions[rev['key']],'ignore_revision'):
              key = rev['key']
              break
      updated.append(tiddler.title + '\n' + tiddler.modified + '\n' + key)

  if len(updated) > 1:
    return '\n\n'.join(updated)
  else:
    return ''
