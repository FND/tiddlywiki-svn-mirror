
== ENTITIES ==

* Tiddler

  A tiddler, its content and metadata.

* Bag

  A list of tiddlers.

* Security Policy

  An attribute of a bag that describes access control for the
  bag and the tiddlers within.

* Filter

  A filter on the list of tiddlers. (e.g. only those with tag "foo")

* Recipe Line

  The combination of a bag and a filter.

* Recipe

  An ordered list of recipe lines.

* Workspace

  The tiddlywiki that results from running a recipe.

== URLS ==

See urls.map in this directory.

== STORAGE ==

Storage is handled by "Stores", which implement an interface 
for getting and putting recipes, bags and tiddlers. A text
store has been implemented in tiddlyweb/stores/text.py.

Other stores to come.

We've not yet had any serious discussion about revision handling.

== MISC ==

* Consider using rhino for at least some the testing to replicate
  a real TiddlyWiki, or instrument a realy TiddlyWiki.

* Syntax, semantics and mechanics of searching tiddlers still
  needs work.

== Revision Handling ==

Discussion with Zac led to a possible model for revisions for Tiddlers:

* Tiddlers get a revision field. If unset when interacting with the store,
  then we are operating on HEAD.
* store implements list_tiddler_revisions(tiddler)

Is this enough?
