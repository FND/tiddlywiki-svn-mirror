/%----------------------------------------------------------------------
<-- Be careful when editing this header - see comments! -->
<WikklyContentHeader>
 <Author>0</Author>
 <Created>200710051958</Created>
 <!-- Example: <Tags>One Two [[Three Four]] Five</Tags> -->
 <Tags>help</Tags>
 <!-- Valid types: WikklyText, TiddlyWiki -->
 <ContentType>WikklyText</ContentType>
 <Revision></Revision>
</WikklyContentHeader>
----------------------------------------------------------------------%/
/%
	This is the main part of the WikklyText help file.
	
	Do not delete or rename it.
%/

This is the [[WikklyText|http://wikklytext.com]] user documentation (version <<version>>).

<<indent '''
//You can generate this help file by placing// {{{<&#x200b;<help>&#x200b;>}}}
// inside any wiki text.//
'''>>	

<<if_safe_mode "

@@You are running in Safe Mode, not all features/macros are available.@@">>

!!Contents
	* [[Formatting|#BASIC_FORMATTING]]
	* [[Unicode and Multibyte Character Sets|#UNIMBCS]]
	* [[Macros|#MACROS]]
	* [[Built-in Macros|#MACRO_DOCS]]
	* [[User-defined Macros (Local)|#USER_MACRO_DOCS]]
	* [[Differences from TiddlyWiki|#TIDDLY_DIFF]]
	
/% define anchor - used in table of contents %/
[[#BASIC_FORMATTING]]
!!Formatting

| [[Bold|#BOLD]] | [[Italic|#ITALIC]] | [[Strikethrough|#STRIKETHROUGH]] | [[Underline|#UNDERLINE]] |
| [[Superscript|#SUPERSCRIPT]] | [[Subscript|#SUBSCRIPT]] | [[Comments|#COMMENTS]] | [[Inline styling|#INLINESTYLE]] |
| [[Links|#LINK]] | [[Images|#IMGLINK]] | [[HTML-markup|#HTML_MARKUP]] | [[NoWiki|#NOWIKI_MARKUP]] |
| [[Inline code|#INLINE_CODE]] | [[Block code|#BLOCK_CODE]] | [[Block-Indent|#BLOCKINDENT]] | [[Line-Indent|#LINEINDENT]] |
| [[Lists|#LISTS]] | [[Headings|#HEADINGS]] | [[Definitions|#DEFINITIONS]] | [[Tables|#TABLES]] |

[[#BOLD]]
<<indent """
__Bold__
|!Markup|{{{'' ... ''}}}|
|!Example|{{{here is ''bold text''}}}|
|!Result|here is ''bold text''|
""">>

<<indent """
[[#ITALIC]] __Italic__
|!Markup|{{{// ... //}}}|
|!Example|{{{here is //italic text//}}}|
|!Result|here is //italic text//|
""">>

<<indent """
[[#STRIKETHROUGH]] __Strikethrough__
|!Markup|{{{-- ... --}}}|
|!Example|{{{here is --strikethrough text--}}}|
|!Result|here is --strikethrough text--|
""">>

<<indent """
[[#UNDERLINE]] __Underlined__
|!Markup|{{{__ ... __}}}|
|!Example|{{{here is __underlined text__}}}|
|!Result|here is __underlined text__|
""">>

<<indent """
[[#SUPERSCRIPT]] __Superscript__
|!Markup|{{{^^ ... ^^}}}|
|!Example|{{{here is ^^superscript text^^}}}|
|!Result|here is ^^superscript text^^|
""">>

<<indent """
[[#SUBSCRIPT]] __Subscript__
|!Markup|{{{~~ ... ~~}}}|
|!Example|{{{here is ~~subscript text~~}}}|
|!Result|here is ~~subscript text~~|
""">>

<<indent """
[[#COMMENTS]] __Comments__
|!Markup|{{{/% ... %/}}}|
|!Example|{{{/% A comment produces no output %/}}}|
|!Result|/% A comment produces no output %/|
|!Caveats|//Comments are not allowed to nest.//|
""">>

<<set M """{{{
/***
...
***/
}}}""">>

<<set E """{{{
/***
The comment markers are removed. Inner text
''is'' //processed// __normally__.
***/
}}}""">>

<<set R """
/***
The comment markers are removed. Inner text
''is'' //processed// __normally__.
***/
""">>

<<indent """
|!Markup|<<get M>>|
|!Example|<<get E>>|
|!Result|<<get R>>|
|!Caveats|//Comments are not allowed to nest.//|
""">>

<<set M """{{{
<!---
...
--->
}}}""">>

<<set E """{{{
<!---
The comment markers are removed. Inner text
''is'' //processed// __normally__.
--->
}}}""">>

<<set R """
<!---
The comment markers are removed. Inner text
''is'' //processed// __normally__.
--->
""">>

<<indent """
|!Markup|<<get M>>|
|!Example|<<get E>>|
|!Result|<<get R>>|
|!Caveats|//Comments are not allowed to nest.//|
""">>

<<indent """
[[#INLINESTYLE]] __Highlighted__
|!Markup|{{{@@ ... @@}}}|
|!Example|{{{Here is @@highlighted text@@}}}|
|!Result|Here is @@highlighted text@@|

""">>

<<indent """
__Applying CSS classes__
|!Markup|{{{ {{class{ ... }}&#x200b;}&#x200b;}}}|
|!Example|{{{ Here is {{grayout{grayed-out text}}&#x200b;} with CSS&#x200b;}}}|
|!Result|Here is {{grayout{grayed-out text}}} with CSS|
""">>

<<indent <quote>
<<infobox "More on Classes" """
Classes are flowed down into inner elements by appending them //after// any
classes applied previously. This is especially useful when you want to override
implicit styling:
{{{
A link using implicit styling: 
* http://wikklytext.com

A link using my styling to override: 
* {{test_overline{http://wikklytext.com}}&#x200b;}
}}}

Result:

A link using implicit styling: 
* http://wikklytext.com

A link using my styling to override: 
* {{test_overline{http://wikklytext.com}}}
""">>
</quote>>>

<<indent """
__Inline CSS styles__ (with {{{@@style; ...}}})
|!Markup|{{{ @@styles; ... }}}|
|!Example|{{{@@color: green; font-style: italic; hello world@@}}}|
|!Result|@@color: green; font-style: italic; hello world@@|
|!Caveats|//@@Not available in Safe Mode@@//|
""">>

<<indent """
__Inline styling__ (with old-style {{{color()}}} statement)
|!Markup|{{{@@color(color): ... @@}}}|
|!Example|{{{testing @@color(green): green text@@}}}|
|!Result|testing @@color(green): green text@@|
|!Caveats|//@@Not available in Safe Mode@@//|
""">>

<<indent """
__Inline-styling__ (with old-style {{{bgcolor()}}} statement)
|!Markup|{{{@@bgcolor(color): ... @@}}}|
|!Example|{{{testing @@bgcolor(yellow): yellow background@@}}}|
|!Caveats|//@@Not available in Safe Mode@@//|
|!Result|testing @@bgcolor(yellow): yellow background@@|
""">>
.
[[#LINK]]
<<indent """
__Link__
|!Markup|{{{[[Link Text|URL]]}}}|
|!Example|Here is a {{{[[link to wikklytext.com|http://wikklytext.com]]}}}|
|!Result|Here is a [[link to wikklytext.com|http://wikklytext.com]]|
""">>

<<indent """
[[#IMGLINK]] __Image (no link)__
|!Markup|{{{[img[file]]}}}|
|!Example|{{{[img[css/img_link_www.png]]}}}|
|!Result|[img[css/img_link_www.png]]|
""">>

<<indent """
__Bare URLs are turned into links as well:__
|!Markup|{{{http:// ..., file:/// ..., ftp:// ..., etc.}}}|
|!Example|{{{http://boodebr.org/python, mailto:nobody@nowhere.com}}}|
|!Result|http://boodebr.org/python, mailto:nobody@nowhere.com|
""">>

<<indent """
__Image (with link)__
|!Markup|{{{[img[file][URL]]}}}|
|!Example|{{{[img[css/img_link_www.png][http://wikklytext.com]]}}}|
|!Result|[img[css/img_link_www.png][http://wikklytext.com]]|
""">>

/% This is a little ugly since I need to put '}}}' inside a code block %/
<<set raw-html-example """
{{{
<html>Raw <b>HTML</b>, all <i>wiki markup</i> {{{ is }}&#x200b;} ignored}}</html>
}}}
""">>

<<indent """
[[#HTML_MARKUP]] __Raw HTML__
|!Markup|{{{<html> ... </html>}}}|
|!Example|<<get raw-html-example>>|
|!Result|<html>Raw <b>HTML</b>, all <i>wiki markup</i> {{{ is }}&#x200b;} ignored}}</html>|
|!Caveats|//HTML blocks are not allowed to nest.<br>This markup is not available in Safe Mode.//|
""">>

<<set nowiki-example """
{{{
<nowiki><nowiki>, ignores <b>all</b> &nbsp;&#32; //markup//</nowiki>
}}}
""">>

<<indent """
[[#NOWIKI_MARKUP]] __NoWiki__
|!Markup|{{{<nowiki> ... </nowiki>}}}|
|!Example|<<get nowiki-example>>|
|!Result|<nowiki><nowiki>, ignores <b>all</b> &nbsp;&#32; //markup//</nowiki>|
|!Caveats|//nowiki blocks are not allowed to nest.//|
""">>

<<indent """
__Line-break__
|!Markup|{{{<br>}}} or {{{<br/>}}}|
|!Example|{{{Here is a<br>break and<br/>another break}}}|
|!Result|Here is a<br>break and<br/>another break|
""">>

<<indent """
__Dash__
|!Markup|{{{--}}}|
|!Example|{{{And then -- eureka!}}}|
|!Result|And then -- eureka!|
""">>
.
<<set sep_example """
----
""">>

<<indent """
__Separator__
|!Markup|{{{----}}}<br>//(On a line by itself.)//|
|!Example|{{{----}}}|
|!Result|<<get sep_example>>|
""">>

<<indent """
__HTML Entities__
|!Markup|{{{&ENTITY;}}}, {{{&NNN;}}}, {{{&#xHH}}}|
|!Example|{{{&Pi; <br> 1 &#43; 2 &#x3d; 3}}}|
|!Result|&Pi; <br> 1 &#43; 2 &#x3d; 3|
""">>

<<set NULLdot-example """{{{.}}}""">>

<<set NULLdot-result """
.
""">>

<<indent """
__NULL-dot__
|!Markup|{{{.}}}<br>//(On a line by itself.)//|
|!Example|<<get NULLdot-example>>|
|!Result|<<get NULLdot-result>>|
<<<
//This is a ''WikklyText'' extension. The NULL-dot allows you to spread your text out for
readability without causing blank lines to be inserted.//
<<<
""">>

<<indent """
__NOP__
|!Markup|{{{&#&#x200b;x2&#x200b;00b;}}}|
|!Example|{{{Hel&#&#x200b;x2&#x200b;00b;lo Wo&#&#x200b;x2&#x200b;00b;rld}}}|
|!Result|{{{Hel&#x200b;lo Wo&#x200b;rld}}}|
<<<
//This is a ''WikklyText'' extension. The NOP sequence is always removed from the final markup.
It allows you to break-up sequences that would otherwise be identified as markup, where no other
escaping methods work.//
<<<
""">>
/% I use a handy trick here - the HTML writer will remove &#x200b; characters from the final
   HTML stream. I use that so I can put '}}}' inside of a code block. Since its a single line, the 'echo'
   macro comes in handy. %/
<<indent """
[[#HTML_MARKUP]] __Inline code__
|!Markup|<<echo "{{{ {{{ ... }}&#x200b;} }}}">>|
|!Example|<<echo "{{{Here is an {{{inline code}}&#x200b;} sample}}}">>|
|!Result|Here is an {{{inline code}}} sample|
|!Caveats|//Code blocks are not allowed to nest.//|
""">>

/% Similar trick as above, except I set the string to a variable since it spans multiple
   lines and could not be put directly into the table otherwise. %/
<<set code-block-markup """
{{{
{{{
   ...
   ...
}}&#x200b;}
}}}""">>

<<set code-block-example """ 
{{{
{{{
for i in range(20):
    print i
    print i*10
}}&#x200b;}
}}}""">>

<<set code-block-example-show 
"""{{{
for i in range(20):
   print i
   print i*10
}}}""">>

<<indent """
[[#BLOCK_CODE]] __Code Blocks__
|!Markup|<<get code-block-markup>>|
|!Example|<<get code-block-example>>|
|!Result|<<get code-block-example-show>>|
|!Caveats|//Code blocks are not allowed to nest.//|
""">>

<<set M """{{{
/*{{{*/
...
...
/*}}&#x200b;}*/
}}}""">>

<<set E """{{{
/*{{{*/
Here is a
block of code.
/*}}&#x200b;}*/
}}}""">>

<<set R """
/*{{{*/
Here is a
block of code.
/*}}}*/
""">>

<<indent """
|!Markup|<<get M>>|
|!Example|<<get E>>|
|!Result|<<get R>>|
|!Caveats|//Code blocks are not allowed to nest.//|
""">>

<<set M """{{{
//{{{
...
...
//}}&#x200b;}
}}}""">>

<<set E """{{{
//{{{
Here is a
block of code.
//}}&#x200b;}
}}}""">>

<<set R """
//{{{
Here is a
block of code.
//}}}
""">>

<<indent """
|!Markup|<<get M>>|
|!Example|<<get E>>|
|!Result|<<get R>>|
|!Caveats|//Code blocks are not allowed to nest.//|
""">>

<<set M """{{{
<!--{{{-->
...
...
<!--}}&#x200b;}-->
}}}""">>

<<set E """{{{
<!--{{{-->
Here is a
block of code.
<!--}}&#x200b;}-->
}}}""">>

<<set R """
<!--{{{-->
Here is a
block of code.
<!--}}}-->
""">>

<<indent """
|!Markup|<<get M>>|
|!Example|<<get E>>|
|!Result|<<get R>>|
|!Caveats|//Code blocks are not allowed to nest.//|
""">>

<<set blockindent-markup """
{{{
<<<
   ...
<<<
}}}
""">>

<<set blockindent-example """
{{{
<<< 
A block-ident indents the inner wiki text, preserving
all other formatting. For example, here is a list:

* One
* Two
** Two.A
** Two.B
* Three
<<<}}}		 
""">>

<<set blockindent-result """
<<<
A block-ident indents the inner wiki text, preserving
all other formatting. For example, here is a list:

* One
* Two
** Two.A
** Two.B
* Three
<<<
""">>

<<indent """
[[#BLOCKINDENT]]
__Block-Indent__
|!Markup|<<get blockindent-markup>>|
|!Example|<<get blockindent-example>>|
|!Result|<<get blockindent-result>>|
""">>

<<set lineindent-markup """
{{{
> ...
>> ...
>>> ...
> ...
}}}
""">>

<<set lineindent-example """
{{{
> Level one<br>
> here
>> Level two<br>
>> here
>>> Level three<br>
>>> here
> Level one<br>
> here
}}}
""">>

<<set lineindent-result """
> Level one<br>
> here
>> Level two<br>
>> here
>>> Level three<br>
>>> here
> Level one<br>
> here
""">>

<<indent """
[[#LINEINDENT]]
__Line-Indent__
|!Markup|<<get lineindent-markup>>|
|!Example|<<get lineindent-example>>|
|!Result|<<get lineindent-result>>|
""">>

<<set olist-markup """
{{{
# ... 1st level ...
## ... 2nd level ...
### ... 3rd level ...
}}}
""">>

<<set olist-example """
{{{
/% Leading spaces are optional %/
# Item One
  ## Item Two
    ### Item three
# Item Four
}}}
""">>

<<set olist-result """
/% Leading spaces are optional %/
# Item One
  ## Item Two
    ### Item three
# Item Four
""">>

<<indent """
[[#LISTS]]
__Numbered list__
|!Markup|<<get olist-markup>>|
|!Example|<<get olist-example>>|
|!Result|<<get olist-result>>|
""">>

<<set ulist-markup """
{{{
* ... 1st level ...
** ... 2nd level ...
*** ... 3rd level ...
}}}
""">>

<<set ulist-example """
{{{
/% Leading spaces are optional %/
* Item One
  ** Item Two
    *** Item three
* Item Four
}}}
""">>

<<set ulist-result """
/% Leading spaces are optional %/
* Item One
  ** Item Two
    *** Item three
* Item Four
""">>

<<indent """
__Unnumbered list__
|!Markup|<<get ulist-markup>>|
|!Example|<<get ulist-example>>|
|!Result|<<get ulist-result>>|
""">>

<<set heading-markup """
{{{
!1st level
!!2nd level
!!!3rd level
}}}
""">>

<<set heading-example """
{{{
!Heading, level 1

!!Heading, level 2

!!!Heading, level 3

!!!!Heading, level 4

!!!!!Heading, level 5

!!!!!!Heading, level 6
}}}
""">>

<<set heading-result """
!Heading, level 1

!!Heading, level 2

!!!Heading, level 3

!!!!Heading, level 4

!!!!!Heading, level 5

!!!!!!Heading, level 6
""">>

<<indent """
[[#HEADINGS]]
__Headings__
|!Markup|<<get heading-markup>>|
|!Example|<<get heading-example>>|
|!Result|<<get heading-result>>|
""">>

<<set definition-markup """
{{{
;Term
:Definition
}}}
""">>

<<set definition-example """
{{{
;Term 1
:This is the definition of Term 1
;Term 2
:This is the definition of Term 2
}}}
""">>

<<set definition-result """
;Term 1
:This is the definition of Term 1
;Term 2
:This is the definition of Term 2
""">>

<<indent """
[[#DEFINITIONS]]
__Definition List__
|!Markup|<<get definition-markup>>|
|!Example|<<get definition-example>>|
|!Result|<<get definition-result>>|
""">>

!!!Tables

[[#TABLES]] Use {{{|}}} to separate columns and {{{!}}} to mark header cells.

<<indent """
{{{
|!a|!b|!c|
|!d|e|f|
|!g|h|i|
}}}
""">>

<<indent """
|!a|!b|!c|
|!d|e|f|
|!g|h|i|
""">>
For column spans, put {{{>}}} in the skipped columns:

<<indent """
{{{
|!a|!b|!c|
|!d|>|colspan=2|
|!g|h|i|
}}}
""">>

<<indent """
|!a|!b|!c|
|!d|>|colspan=2|
|!g|h|i|
""">>
For row spans, put {{{~}}} in the skipped rows:

<<indent """
{{{
|!a|!b|!c|
|!d|rowspan=3|f|
|!g|~|i|
|!j|~|l|
}}}
""">>

<<indent """
|!a|!b|!c|
|!d|rowspan=3|f|
|!g|~|i|
|!j|~|l|
""">>
You can add a caption by adding a row like this (//note there is no trailing '|'//):

<<indent """
{{{
|A Table Caption|c
}}}
""">>

Example:

<<indent """
{{{
|!aaaaaaaa|!bbbbbbbb|!ccccccccc|
|!d|e|f|
|!g|h|i|
|A Table Caption|c
}}}
""">>

Result:

|!aaaaaaaa|!bbbbbbbb|!ccccccccc|
|!d|e|f|
|!g|h|i|
|A Table Caption|c

Coloring cells with {{{bgcolor()}}}:

<<if_safe_mode "@@Not available in Safe Mode@@">>
<<if_full_mode '''
<<indent """
{{{
|a|b|c|
|bgcolor(yellow):yellow here|>|bgcolor(#ff0000):red here|
|>|>|bgcolor(green): @@color: white; font-weight: bold;bold white on green by mixing styles@@ |
}}}
""">> '''>>

<<if_full_mode '''
<<indent """
|a|b|c|
|bgcolor(yellow):yellow here|>|bgcolor(#ff0000):red here|
|>|>|bgcolor(green): @@color: white; font-weight: bold;bold white on green by mixing styles@@ |
""">> '''>>

!!!!Text Justification in Table Cells

Text justification follows TiddlyWiki's rules on leading/trailing spaces:
* ''Leading spaces'': Right justify
* ''Trailing spaces'': Left justify
* ''Leading //and// trailing spaces'': Center justify
* ''No spaces'':
** ''Header cell'': Center justify
** ''Normal cell'': Left justify
* ''Leading spaces on {{{bgcolor()}}}, if used'': No effect on calculation

''Example''

{{{
|aaaaaaaaaaaaaaaaaaa|bbbbbbbbbbbbbbbbb|cccccccccccccccccccc|
|!left header |>| !center header |
| !right header|>|!center header|
|left text | center text | right text|
|>|>|left text|
| bgcolor(#008800):left text |bgcolor(#008800): center text |bgcolor(#008800): right text|
|>|>|  bgcolor(#008800):left text|
}}}

''Result''
|aaaaaaaaaaaaaaaaaaa|bbbbbbbbbbbbbbbbb|cccccccccccccccccccc|
|!left header |>| !center header |
| !right header|>|!center header|
|left text | center text | right text|
|>|>|left text|
| bgcolor(#ffaa00):left text |bgcolor(#ffaa00): center text |bgcolor(#ffaa00): right text|
|>|>|  bgcolor(#ffaa00):left text|

<<if_safe_mode """
@@This sample won't look correct in Safe Mode since inline-styling is turned off.@@
""">>

!!![[#UNIMBCS]] Unicode and Multibyte character sets

''WikklyText'' fully supports multilingual content using both traditional multibyte character sets as
well as Unicode. See [[multilanguage examples|MultiLingual]] for details.

!!![[#MACROS]]Macros

__Calling a Macro__
|!Markup|{{{<<macroname arg1 arg2 ...>>}}}|
|!Example|{{{<<echos aaa "bbb" 'ccc' """ddd""" '''eee''' <quote>"fff"</quote>>>}}}|
|!Result|<<echos aaa "bbb" 'ccc' """ddd""" '''eee''' <quote>"fff"</quote>>>|

__Writing Macros__

See {{{coremacros.py}}} in the ''WikklyText'' distribution for complete examples of macros.

You can also define macros inside your wikitexts like this:

{{{
<?py
def mytable(context, width, height):
	# args are Elements - convert .text part
	width = int(width.text)
	height = int(height.text)
	txt = 'A %d by %d table\n' % (width,height)
	
	for i in range(height):
		# row
		for j in range(width):
			txt += '|%d' % (i*width + j + 1)
			
		txt += '|\n'
		
	return txt
?>
/% call it ... %/
<<mytable 4 10>>
}}}

Inside a macro, the following globals are always available:
| ! {{tt{Element}}}, {{tt{SubElement}}} |From ElementTree|
| ! {{tt{Text}}} |Convenience to make a <Text> node.<br>Usage: {{{Text("some text")}}}|
| ! {{tt{WikError}}} |If you need to raise an Exception, use this type.|
| ! {{tt{FS_CWD}}} |The (physical) location of your wikitext.<br><br>If you need to open a file relative to your wikitext location, do:<br> {{{open(os.path.join(FS_CWD,filename), ...)}}}|

// When writing inline code, {{{<?py}}} and {{{?>}}} must be the first and last things on a line (although the code 
can span multiple lines).//

<<set YES "@@color: green; font-weight: bold; YES@@">>
<<set NO "@@color: red; font-weight: bold; NO@@">>
<<set PARTIAL "@@color: #dea300; font-weight: bold; PARTIAL@@">>

!![[#TIDDLY_DIFF]]Differences between TiddlyWiki & WikklyText

There are probably more differences than I've listed here, these are just the ones I've noted to date.
Most are due to personal preference in situations where I don't like something TiddlyWiki does. See the footnotes
for details, if you are interested.

|!Item|!TiddlyWiki|!WikklyText|
|!Allows leading spaces in listitems<br>{{{* # ; :}}}| <<get NO>> | <<get YES>>[[^^1^^|#FOOT1]] |
|!Allows leading spaces in separators<br>{{{----}}}| <<get NO>> | <<get YES>>[[^^1^^|#FOOT1]] |
|!Allows leading spaces in {{{bgcolor()}}}| <<get NO>> | <<get YES>>[[^^2^^|#FOOT2]] |
|!Allow extra spaces inside {{{@@ .. @@}}}| <<get NO>> | <<get YES>>[[^^2^^|#FOOT2]] |
|!Allows full markup in links| <<get NO>> | <<get YES>> |
|!Effect of a single linebreak character|Breaks paragraph|Paragraph continues flowing until double linebreak[[^^3^^|#FOOT3]]<br><br>//Use {{{<<set $REFLOW 0>>}}} to get TiddlyWiki behavior//|
|!Maximum header depth|5; extra "{{{!}}}" chars are shown|6; extra "{{{!}}}" chars are hidden[[^^4^^|#FOOT4]]|
|!~WikiWords are automatic links| <<get YES>> | <<get YES>>[[^^5^^|#FOOT5]] |
|!Anchors within document| <<get NO>> | <<get YES>>[[^^6^^|#FOOT6]] |
|!Output Formats|TiddlyWiki<br><br>//All-in-one self-contained wiki//|XML, HTML, Drupal plugin, or standalone Wiki<br><br>//Modular library useful in any number of situations, plus a wiki server.//|
|!Image float left/right| <<get YES>> | <<get NO>>[[^^10^^|#FOOT10]] |
|!In tables: Classes, THEAD, TFOOT| <<get YES>> | <<get NO>>[[^^10^^|#FOOT10]] <br> //Use {{{{{class{}}} to set styles for tables and elements.// |
|>|>|bgcolor(#9FB2F1): ''Macros'' |
|!Macro language| Javascript | Python |
|!How macros work ...|Create DOM elements directly in wiki|Return etree.Elements or strings (that are reparsed for wiki content)|
|!Arg quoting|unquoted, {{{'}}}, {{{"}}}|unquoted, {{{'}}}, {{{"}}}, {{{'''}}}, {{{"""}}}, {{{<quote> .. </quote>}}}[[^^7^^|#FOOT7]]|
|!Arg: {{{"aaa"bbb'ccc'}}}|Two args ({{{aaa}}} and {{{bbb'ccc'}}})|One arg ({{{aaabbbccc}}})<br>//Auto-concatenation of adjacent strings//[[^^8^^|#FOOT8]]|
|!Nested macro calls?| <<get PARTIAL>>[[^^11^^|#FOOT11]] | <<get YES>>[[^^9^^|#FOOT9]] |
|!Thread-safe storage for data persistence across macro calls?| <<get NO>> | <<get YES>> |
|!Python/C style escapes in argument strings?| <<get NO>> | <<get YES>> |

Footnotes:
# [[#FOOT1]] I like my wiki source texts to be indented the same as they will render in HTML. Also, many editors (like [[jEdit|http://www.jedit.org]]) auto-indent by default, and it is harder to delete the indents than leave them in. 
# [[#FOOT2]] No particular reason, just to be lenient.
# [[#FOOT3]] This could be argued either way - TiddlyWiki's way is more WYSIWYG, but I prefer to be able to write a long paragraph without having to put it all on one line.
# [[#FOOT4]] 6 levels are supported because that is what HTML defines as the maximum.
# [[#FOOT5]] WikklyText //does not// create automatic links to undefined CamelCaseWords. I personally find this TiddlyWiki behavior annoying since, more often than not, I have to add a {{{~}}} to turn them off.
# [[#FOOT6]] You can create document anchors like this:
** Create anchor: {{{[[#anchor_name]]}}}
** Link to anchor: {{{[[Link text|#anchor_name]]}}}
# [[#FOOT7]] I say, the more quoting methods the better, and this was inspired by Python's triple-quoted strings. The extension {{{<quote> ... </quote>}}} comes in handy especially when you are quoting Python code in a macro call that already contains the other quote types.<br>//NOTE: Unlike Python, Single-vs-Triple strings are not special. They are both allowed to contain embedded newlines, etc.//
# [[#FOOT8]] Similar to Python and the C-preprocessor, cramming strings together works.
# [[#FOOT9]] The only time they cause a problem is if a macro returns text containing {{{<<}}} that is then parsed as another macro call.
# [[#FOOT10]] Will likely be added to WikklyText at some point.
# [[#FOOT11]] As I understand it, TiddlyWiki somewhat supports nested macros with an extended call syntax, but WikklyText supports nesting like this: {{{
<<one <<two <<three>> >> >>
}}} ... where {{{<<two}}} gets the returned value from {{{<<three>>}}} as an input arg.

