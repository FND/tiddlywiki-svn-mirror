modifier: ChrisDent
created: 
modified: 20090106172537
type: None
tags: 

This is a rudimentary help document for [[Former]]. At the moment it is being used to describe how the system needs to be built.

The system provides two basic pieces of functionality:

# It lets an administrator create a PackageTemplate: the source of a TiddlyWiki which is then used for editing forms (a Package?).
# It lets a form user (someone who fills in forms) retrieve a Package of their choice and save filled (partial and complete) forms back to the server


!!Administration

In TiddlyWeb terms, a PackageTemplate is a Recipe: the tiddlers from one or more Bags. Every package has a base bag:

# system: TiddlyWeb client plugins and the default tiddlers required for basic form functionality

and is customized by the content in a package specific bag. This other bag contains:

# content and style for customizing the look and feel of the package
# View and Edit templates specific to the form or forms in the system.

It is the responsibility of a server install process to establish the datastore, including a system bag. Once the system is installed the update twanager command can be used to get the most recent versions of the relevant tiddlers into place.

It is the responsibility of the administrator or an administrative tool to:

# create the package specific bag, including the required custom content
# create the package template recipe, associating the system and formcore bags with the package specfic bag
# (maybe: associate a unique identifier with the recipe, identifying a URL for a particular for user)

!!Use

Once a form user has a URL for getting a form, that user can visit the URL and retrieve a TiddlyWiki which is the "Package" plus sufficient configuration to make the form data be saved to a user specific location.

This implies that each user has at least one bag, and that bag is configured into the outgoing TiddlyWiki in a "Package". One way to do this would be to include a tiddler with the info in the outgoing stack of tiddlers.

There are at least two ways to approach this:

# Require authenticated access to recipe URLs. Use the username to spur the special outgoing information.
# Create special URLs per user. Use the special URL to spur the special outgoing information.

In either case it needs to be easy for a user to:

# Retrieve form data that has gone before.
# //Not// retrieve form data that has gone before if they don't want to.
