tags: systemConfig

/***
|''Name''|RandomColorPalettePlugin|
|''Description''|Adds a random color palette to TiddlyWiki|
|''Author''|Jon Robson|
|''License''|[[BSD|http://www.opensource.org/licenses/bsd-license.php]]|
!Code
***/
//{{{
(function(){
  function HSL_TO_RGB(h,s,l){
  	var chroma;
  	if(l <= 0.5) chroma = (2*l) * s;
  	else chroma = (2-(2*l)) * s;
          var c = chroma;
  	var h1 = h/60;
  	var x = c *(1 - (h1 % 2 -1)); 
  	var r,g,b;
  	if(!h){r=0; g=0; b=0;}
  	else if(0 <= h1 < 1){r = c;g=x;b=0;}
  	else if(1 <= h1 < 2){r = x;g=c;b=0;}
  	else if(2 <= h1 < 3){r = 0;g=c;b=x;}
  	else if(3 <= h1 < 4){r = 0;g=x;b=c;}
  	else if(4 <= h1 < 5){r = x;g=0;b=c;}
  	else if(5 <= h1 < 6){r = c;g=0;b=x;}
  	m = l - (0.5*c);
  	r+= m;
  	g += m;
  	b += m;
  	r = parseInt(r * 255);
  	g = parseInt(g * 255);
  	b = parseInt(b * 255);
  	return "rgb("+r+","+g+","+b+")";
  }

  function generate_palette(){
  	var palette = {Background: "#fff",Foreground: "#000",PrimaryPale: "#8cf",PrimaryLight: "#FF7673",PrimaryMid: "#A60400",PrimaryDark: "#A60400",SecondaryPale: "#ffc",SecondaryLight: "#fe8",SecondaryMid: "#db4",SecondaryDark: "#841",TertiaryPale: "#eee",TertiaryLight: "#ccc",TertiaryMid: "#999",TertiaryDark: "#666",Error: "#f88"};
  	var hue = Math.floor(Math.random() * 360 + 1);
  	var saturation = (Math.random()* 1);
  	var dark = (Math.random() * 0.4); //this will be the darkest color.
  	var pale = (Math.random() * 0.4) + 0.6;
  	if(dark < 0.07) dark = 0.07;
    pale = 1 - dark;
  	var lightness_values = {Dark:dark,Mid:(pale-dark)/2,Light:pale-((pale-dark)/4),Pale:pale};

  	var opposite_hue = (hue + 180) %360;
  	var seed = Math.floor((85 * Math.random()) +5); //we want it to be at least 5 degrees
  	var huetwo = (opposite_hue + seed) %360;
  	var huethree = (opposite_hue - seed) %360;
  	if(huetwo < 0) huetwo = 360 + huetwo;
  	if(huethree < 0) huethree = 360 - huethree;
  	//console.log(hue,opposite_hue,huetwo,huethree,seed,"l",pale,"d",dark,"s",saturation);
  	for(var j in lightness_values){
  		palette["Primary"+j] = HSL_TO_RGB(hue,saturation,lightness_values[j] * 0.8);
  		palette["Secondary"+j] = HSL_TO_RGB(huetwo,saturation,lightness_values[j]);
  		//console.log(j,lightness_values[j]);
  		palette["Tertiary"+j] = HSL_TO_RGB(huethree,saturation,lightness_values[j]);
  	}
  	palette["Background"] = HSL_TO_RGB(hue,saturation,0.92);
    palette["Foreground"] = HSL_TO_RGB(hue,saturation,0.08);
  	//construct new ColorPalette
  	var text= "";
  	for(var id in palette){
  		text += id +":"+palette[id]+"\n";
  	}
  	var newDate = new Date();
  	var tid =store.saveTiddler('ColorPalette', 'ColorPalette', text, 'RandomColorPalette Macro',newDate,[],merge({},config.defaultCustomFields),false,newDate,'');
  	saveChanges();
  	refreshAll();
  }

  config.macros.RandomColorPalette = {
  	text: "New ColorPalette",
  	tooltip: "Generate a random colour scheme for your TiddlyWiki",
  	handler: function(place){
  		createTiddlyButton(place,this.text,this.tooltip,generate_palette);
  	}
  };
  var old_restart = restart;
  restart = function(){
    var p = store.getTiddler("ColorPalette");
    if(!p)generate_palette();
    old_restart();
  }
})();
//}}}