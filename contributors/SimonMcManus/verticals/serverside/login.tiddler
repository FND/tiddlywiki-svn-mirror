<div title="login" tags="systemConfig">
<pre>
//{{{

config.macros.login={};	
merge(config.macros.login,{
	WizardTitleText:"Please Login",
	usernameRequest:"Username",
	passwordRequest:"Password",
	
	stepLoginTitle:"Please Login",
	stepLoginIntroTextHtml:"<table border=0px><tr><td>username</td><td><input name=username id=a tabindex='1'></td></tr><tr><td>password</td><td><input type=password id='v' tabindex='2' name=password></td></tr></table>",
	stepDoLoginTitle:"Logging you in",
	stepDoLoginIntroText:"we are currently trying to log you in.... ",
	stepForgotPasswordTitle:"Password Request",
	stepForgotPasswordIntroText:"please email admin@admin.com",
	buttonLogin:"Login",
	buttonLoginToolTip:"click to login ",	
	buttonCancel:"Cancel",
	buttonCancelToolTip:"Cancel transaction ",
	buttonForgottenPassword:"Forgotten Password",	
	buttonForgottenPasswordToolTip:"Click to be reminded of your password",

	configURL:"http://peermore.com:8080/challenge/cookie_form", 
	configUsernameInputName:"user",
	configPasswordInputName:"password",
	configPasswordCookieName:"cctPass"
});
	
config.macros.login.handler=function(place,macroName,params,wikifier,paramString,tiddler){
	config.macros.login.refresh(place);
};

config.macros.login.refresh=function(place){
	removeChildren(place);
	setStylesheet(" input { border: 1px solid #CCCCCC;} .viewer .button {	border:1px solid #CCCCCC; padding:2px 8px; margin:2px 8px;  background:white; color:#666666; }.viewer table, .viewer td, .viewer tr, .twtable td, .twtable tr {border:0px solid #666666;}.wizardFooter { padding : 0em 0em 1em 2em; background:none; font-size:10px; font-weight:bold;}    .wizardStep {border:none; background-color:none; } .wizard { padding:0px border:1px solid #EBE6F5; width:40%; background:none;}", "bgccc");
	var w = new Wizard();
	w.createWizard(place,this.WizardTitleText);

	var me=config.macros.login;
	var oldForm = w.formElem.innerHTML;

	var form = w.formElem;
	//	removeChildren(form);

	var loginDiv=createTiddlyElement(null,"div",null,"loginDiv",null);
//	loginDiv.innerHTML="<div name='background' macro='gradient vert #EBE6F5 #FFF  '>"+oldForm+me.stepLoginIntroTextHtml+w.footerElem+"</div><div class='wizardBody'></div><div name=footer class='wizardFooter'></div>";
	

//	var submitSpan=createTiddlyElement(loginDiv,"div");
//	submitSpan.setAttribute("class","submit");
//	var oldForm = w.formElem.innerHTML;
//	console.log(form);
	
//	form.innerHTML=loginDiv.innerHTML;
	
	w.addStep(this.stepLoginTitle,loginDiv.innerHTML);
	 console.log(form);              
	//var footer = findRelated(form,"wizardFooter","className");
	console.log(footer);
	createTiddlyButton(w.footer,this.buttonLogin,this.buttonLoginToolTip,function() {
		if (w.formElem["username"].value==""){
			displayMessage("No username was entered");
			return false;
		}
		if (w.formElem["password"].value==""){
			displayMessage("No password was entered");
			return false;
		}
		config.macros.login.doLogin(w.formElem["username"].value, w.formElem["password"].value, this, place);
	});
	if(config.macros.register!==undefined){		
		createTiddlyButton(w.footElem,config.macros.register.buttonRegister,config.macros.register.buttonRegisterToolTip,function() {
				config.macros.register.displayRegister(place, this);
		});
	}
	createTiddlyButton(w.footElem,this.buttonForgottenPassword,this.buttonForgottenPasswordToolTip,function() {
		config.macros.login.displayForgottenPassword(this, place);
	});
};

config.macros.login.doLogin=function(username, password, item, place){
	var w = new Wizard(item);
	var me = config.macros.login;
	var urlLogin=me.configURL+"?"+me.configUsernameInputName+"="+username+"&"+me.configPasswordInputName+"="+password;
	doHttp('GET',urlLogin,null,null,null,null,me.loginCallback,null);
	var html = me.stepDoLoginIntroText+urlLogin; 
	w.addStep(me.stepDoLoginTitle,html);
	w.setButtons([
		{caption: this.buttonCancel, tooltip: this.buttonCancelToolTip, onClick: function() {config.macros.login.refresh(place);}
	}]);
}

config.macros.login.loginCallback=function(status,params,responseText,uri,xhr){
	displayMessage(responseText);
	if(xhr.status==401)
		displayMessage("Login Failed");
	else{
		displayMessage(xhr.status);
		window.location=uri;
	} 
};

config.macros.login.displayForgottenPassword=function(item, place){	
	var w = new Wizard(item);
	var me = config.macros.login;
	w.addStep(me.stepForgotPasswordTitle,me.stepForgotPasswordIntroText);
	w.setButtons([
		{caption: this.buttonCancel, tooltip: this.buttonCancelToolTip, onClick: function() {me.refresh(place);}
	}]);
}

</pre>
</div>
//}}}