<?xml version="1.0"?>
<rss version="2.0">
<channel>
<title>TiddlyChatter</title>
<link>http://www.tiddlywiki.com/</link>
<description>Test workbook - to work with other TiddlyChatter-enabled workbooks</description>
<language>en-us</language>
<copyright>Copyright 2007 Jon Lister</copyright>
<pubDate>Tue, 16 Oct 2007 11:09:01 GMT</pubDate>
<lastBuildDate>Tue, 16 Oct 2007 11:09:01 GMT</lastBuildDate>
<docs>http://blogs.law.harvard.edu/tech/rss</docs>
<generator>TiddlyWiki 2.2.5</generator>
<item>
<title>RSSAdaptor</title>
<description>&lt;br&gt;&lt;table class=&quot;twtable&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Title&lt;/td&gt;&lt;td&gt;RSSAdaptor&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Summary&lt;/td&gt;&lt;td&gt;Server adaptor for talking to RSS 2.0 files&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Description&lt;/td&gt;&lt;td&gt;Based on FileAdaptor&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Version of product it works with&lt;/td&gt;&lt;td&gt;2.2.5&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Version of component&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Explanation of how it can be used and modified&lt;/td&gt;&lt;td&gt;This supports the server adaptor interface, a description of which can be found at: &lt;a target=&quot;_blank&quot; title=&quot;External link to http://tiddlywiki.com/#ServerAdaptorMechanism&quot; href=&quot;http://tiddlywiki.com/#ServerAdaptorMechanism&quot; class=&quot;externalLink&quot;&gt;http://tiddlywiki.com/#ServerAdaptorMechanism&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Examples where it can be seen working&lt;/td&gt;&lt;td&gt;The RSSAdator is used in this RSS Reader: (link to come)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;&lt;pre&gt;function RSSAdaptor()
{
	this.host = null;
	this.store = null;
	this.context = null;
	return this;
}

RSSAdaptor.NotLoadedError = &quot;RSS file has not been loaded&quot;;
RSSAdaptor.serverType = 'RSS';
// Use the line below instead of the line above if you want to override the local file adaptor
// RSSAdaptor.serverType = 'file';

// Open the specified host/server
// Return true if successful, error string if not
RSSAdaptor.prototype.openHost = function(host,context,userParams,callback)
{
	this.host = host;
	if(!context)
		context = {};
	context.adaptor = this;
	context.callback = callback;
	context.userParams = userParams;
	var ret = loadRemoteFile(host,RSSAdaptor.openHostCallback,context);
	return typeof(ret) == &quot;string&quot; ? ret : true;
};

RSSAdaptor.openHostCallback = function(status,context,responseText,url,xhr)
{
	var adaptor = context.adaptor;
	context.status = status;
	if(!status) {
		context.statusText = &quot;Error reading file: &quot; + xhr.statusText;
	} else {
		// CHANGE this bit to store RSS file appropriately (as part of the adaptor?) - DONE
		// We're just storing the plain text rather than bring XML into it
		adaptor.store = responseText;
		// OLD CODE
		// Load the content into a TiddlyWiki() object
		// adaptor.store = new TiddlyWiki();
		// if(!adaptor.store.importTiddlyWiki(responseText))
		// 	context.statusText = config.messages.invalidFileError.format([url]);
	}
	context.callback(context,context.userParams);
};

// Gets the list of workspaces on a given server
// Sets context.workspaces, which is a list of workspaces
// Returns true if successful, error string if not (or it should)
// Default for RSS file as we don't have a workspace
RSSAdaptor.prototype.getWorkspaceList = function(context,userParams,callback)
{
	if(!context)
		context = {};
	context.workspaces = [{title:&quot;(default)&quot;}];
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Open the specified workspace
// Returns true if successful, error string if not (or it should)
// Trivial in the case of RSS file where we don't have a workspace
RSSAdaptor.prototype.openWorkspace = function(workspace,context,userParams,callback)
{
	if(!context)
		context = {};
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Gets the list of tiddlers within a given workspace
// Returns true if successful, error string if not (or it should)
// Sets context.tiddlers, which is an array of tiddlers
// Set these variables if possible:
// title: tiddler.title, modified: tiddler.modified, modifier: tiddler.modifier, text: tiddler.text, tags: tiddler.tags, size: tiddler.text
// For RSS each item is a tiddler
RSSAdaptor.prototype.getTiddlerList = function(context,userParams,callback,filter)
{
	if(!this.store)
		return RSSAdaptor.NotLoadedError;
	if(!context)
		context = {};
	context.tiddlers = [];
	// First thing to do is strip out any \r characters in the file, as TiddlyWiki doesn't deal with them
	this.store = this.store.replace(/\r+/mg,&quot;&quot;);
	// regex_item matches on the items 
	var regex_item = /&amp;lt;item&amp;gt;(.|\n)*?&amp;lt;\/item&amp;gt;/mg;
	// regex_title matches for the titles
	var regex_title = /&amp;lt;title&amp;gt;(.|\n)*?&amp;lt;\/title&amp;gt;/mg;
	var regex_guid = /&amp;lt;guid&amp;gt;(.|\n)*?&amp;lt;\/guid&amp;gt;/mg;
	var regex_desc = /&amp;lt;description&amp;gt;(.|\n)*?&amp;lt;\/description&amp;gt;/mg;
	var regex_category = /&amp;lt;category&amp;gt;(.|\n)*?&amp;lt;\/category&amp;gt;/mg;
	var regex_link = /&amp;lt;link&amp;gt;(\S|\n)*?&amp;lt;\/link&amp;gt;/mg;
	var regex_pubDate = /&amp;lt;pubDate&amp;gt;(.|\n)*?&amp;lt;\/pubDate&amp;gt;/mg;
	var item_match = this.store.match(regex_item);
	// check for filter and then implement tag filter if of the form [tag[public stuff]]
	// filter syntax: [tag[tag1 tag2 ...]]
	// tags in the same set of brackets are all compulsory
	// TO-DO: support bracketed list, where multi-word tags are of the form [two words]
	if (filter) {
		var filter_regex = /\[(\w+)\[([ \w]+)\]\]/;
		var filter_match = filter_regex.exec(filter);
		if (filter_match) {
			// filter_match[2] is a space-seperated string of the tags to match on
			var tags_to_match = filter_match[1]==&quot;tag&quot; ? filter_match[2].split(&quot; &quot;) : null;
		} else {
			displayMessage(&quot;no match: check regex in filter&quot;);
		}
	}
	for (var i=0;i&amp;lt;item_match.length;i++) {
		// create a new Tiddler in context.tiddlers with the finished item object
		// grab a title
		item = {};
		var title = item_match[i].match(regex_title);
		if (title)
			item.title = title[0].replace(/^&amp;lt;title&amp;gt;|&amp;lt;\/title&amp;gt;$/mg,&quot;&quot;);
		else {
			// something went wrong grabbing the title, grab the guid instead
			title = item_match[i].match(regex_guid);
			displayMessage(&quot;problem with getting title: &quot; + item_match[i])
			if (title)
				item.title = title[0].replace(/^&amp;lt;guid&amp;gt;|&amp;lt;\/guid&amp;gt;$/mg,&quot;&quot;);
			else {
				item.title = new Date();
				displayMessage(&quot;problem with getting title AND guid: &quot; + item_match[i]);
			}
		}
		// This line makes sure any html-encoding in the title is reversed
		item.title = item.title.htmlDecode();
		// There is a problem with the title, which is that it is not formatted, so characters like &amp;amp;apos; are not converted at render time
		// renderHtmlText() extends String and sorts out the problem
		item.title = item.title.renderHtmlText();
		// grab a description
		desc = item_match[i].match(regex_desc);
		if (desc) item.text = desc[0].replace(/^&amp;lt;description&amp;gt;|&amp;lt;\/description&amp;gt;$/mg,&quot;&quot;);
		else {
			item.text = &quot;empty, something seriously wrong with this item&quot;;
			// displayMessage(&quot;description empty for item: &quot; + item.title);
		}
		var t = new Tiddler(item.title);
		t.text = &quot;&amp;lt;html&amp;gt;&quot; + item.text.htmlDecode().renderHtmlText() + &quot;&amp;lt;/html&amp;gt;&quot;;
		// grab the categories
		category = item_match[i].match(regex_category);
		if (category) {
			item.categories = [];
			for (var j=0;j&amp;lt;category.length;j++) {
				item.categories[j] = category[j].replace(/^&amp;lt;category&amp;gt;|&amp;lt;\/category&amp;gt;$/mg,&quot;&quot;);
			}
			t.tags = item.categories;
		} else {
			// displayMessage(&quot;no tags for item: &quot; + item.title);
		}
		// grab the link and put it in a custom field (assumes this is sensible)
		// regex_link assumes you can never have whitespace in a link
		link = item_match[i].match(regex_link);
		if (link) item.link = link[0].replace(/^&amp;lt;link&amp;gt;|&amp;lt;\/link&amp;gt;$/mg,&quot;&quot;);
		else {
			item.link = &quot;#&quot;;
			// displayMessage(&quot;link empty for item: &quot; + item.title);
		}
		t.fields[&quot;link to original&quot;] = item.link;
		// grab date created
		pubDate = item_match[i].match(regex_pubDate);
		if (pubDate) {
			pubDate = pubDate[0].replace(/^&amp;lt;pubDate&amp;gt;|&amp;lt;\/pubDate&amp;gt;$/mg,&quot;&quot;);
			// TO-DO: does this work on Windows FF and IE??
			item.pubDate = new Date(pubDate);
		} else {
			item.pubDate = new Date();
			// displayMessage(&quot;pubDate empty for item: &quot; + item.title);
		}
		t.created = item.pubDate;
		// check to see that we have a filter to use
		if (filter_match) {
			if(t.isTaggedAllOf(tags_to_match)) {
				context.tiddlers.push(t);
			}
		} else {
			// with no filter, we just add all the tiddlers
			context.tiddlers.push(t);
		}
	}
	context.status = true;
	// Set this.context so that we can refer to the tiddler list even if it is not passed on to us
	this.context = context;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// QUERY: what actually calls this and does it always pass in a real tiddler?
RSSAdaptor.prototype.generateTiddlerInfo = function(tiddler)
{
	var info = {};
	info.uri = tiddler.fields['server.host'] + &quot;#&quot; + tiddler.title;
	return info;
};

// Retrieves a tiddler from a given workspace on a given server
// Sets context.tiddler to the requested tiddler
// Context object passed in from importTiddlers is empty so we use this.context
// Returns true if successful, error string if not (or it should)
RSSAdaptor.prototype.getTiddler = function(title,context,userParams,callback)
{
	if(!this.store)
		return RSSAdaptor.NotLoadedError;
	if(!context)
		context = {};
	// Retrieve the tiddler from the this.context.tiddlers array
	for (var i=0; i&amp;lt;this.context.tiddlers.length; i++) {
		if (this.context.tiddlers[i].title == title) {
			context.tiddler = this.context.tiddlers[i];
		}
	}
	// NOTE: this doesn't add the filter field - is that ok? Probably not...
	if(context.tiddler) {
		context.tiddler.fields['server.type'] = RSSAdaptor.serverType;
		context.tiddler.fields['server.host'] = this.host;
		context.tiddler.fields['server.page.revision'] = context.tiddler.modified.convertToYYYYMMDDHHMM();
		context.status = true;
	} else {
		context.status = false;
		context.statusText = &quot;error retrieving tiddler: &quot; + title;
		return context.statusText;
	}
	if(context.allowSynchronous) {
		context.isSynchronous = true;
		callback(context,userParams);
	} else {
		window.setTimeout(function() {callback(context,userParams);},10);
	}
	return true;
};

RSSAdaptor.prototype.close = function()
{
	delete this.store;
	this.store = null;
};

config.adaptors[RSSAdaptor.serverType] = RSSAdaptor;

// Hack to override the importTiddlers local file behaviour
config.macros.importTiddlers.onBrowseChange = function(e)
{
	var wizard = new Wizard(this);
	var fileInput = wizard.getElement(&quot;txtPath&quot;);
	fileInput.value = &quot;file://&quot; + this.value;
	var serverType = wizard.getElement(&quot;selTypes&quot;);
	if(serverType.value != &quot;RSS&quot;) {
		serverType.value = &quot;file&quot;;
	}
	return false;
};

// renderHtmlText puts a string through the browser render process and then extracts the text
// useful to turn HTML entities into literals such as &amp;amp;apos; to '
String.prototype.renderHtmlText = function() {
	var e = createTiddlyElement(document.body,&quot;div&quot;);
	e.innerHTML = this;
	var text = getPlainText(e);
	removeNode(e);
	return text;
};

// Test if a tiddler carries any of an array of tags
// Takes an array of tags
// Returns true if there is a match, false if not
Tiddler.prototype.isTaggedAnyOf = function(tag_array)
{
	if (tag_array) {
		// get a string of this tiddler's tags
		var this_tag_list = this.getTags();
		// spilt that into an array
		var this_tag_array = this_tag_list.split(&quot; &quot;);
		// check that all the members of tag_array are contained in this_tag_array
		for (var i=0; i&amp;lt;this_tag_array.length; i++) {
			for (var j=0; j&amp;lt;tag_array.length; j++) {
				if (this_tag_array[i] == tag_array[j]) {
					return true;
				}
			}
		}
		// if we get to this point, we've not had any matches
		return false;
	} else {
		return false;
	}
};

// Test if a tiddler carries all of an array of tags
// Takes an array of tags
// Returns true if all match, false if not
Tiddler.prototype.isTaggedAllOf = function(tag_array)
{
	if (tag_array) {
		// get a string of this tiddler's tags
		var this_tag_list = this.getTags();
		// spilt that into an array
		var this_tag_array = this_tag_list.split(&quot; &quot;);
		// check whether any of the members of tag_array are not contained in this_tag_array
		for (var i=0; i&amp;lt;tag_array.length; i++) {
			// tag_match is a flag to signal whether we've had a match for a compulsory tag
			var tag_match = false;
			for (var j=0; j&amp;lt;this_tag_array.length; j++) {
				if (tag_array[i] == this_tag_array[j]) {
					tag_match = true;
					break;
				}
			}
			// if tag_match is still false after we've looked through the tiddler's tags,
			// there is a failed match in the compulsory list so we can return false
			if (tag_match == false) {
				return false;
			}
		}
		// now we've looked through the compulsory tags, return true
		// this is valid because we would have returned false by this point anyway if
		// there had been no match
		return true;
	} else {
		return false;
	}
};
&lt;/pre&gt;</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#RSSAdaptor</link>
<pubDate>Tue, 16 Oct 2007 11:08:58 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>SiteTitle</title>
<description>&lt;a tiddlylink=&quot;TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;TiddlyChatter&lt;/a&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#SiteTitle</link>
<pubDate>Tue, 16 Oct 2007 11:08:35 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>SiteSubtitle</title>
<description>Test workbook - to work with other &lt;a tiddlylink=&quot;TiddlyChatter-enabled&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#TiddlyChatter-enabled&quot; href=&quot;http://www.tiddlywiki.com/#TiddlyChatter-enabled&quot; class=&quot;externalLink&quot;&gt;TiddlyChatter-enabled&lt;/a&gt; workbooks</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#SiteSubtitle</link>
<pubDate>Tue, 16 Oct 2007 11:08:16 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>TiddlyChatterDocumentation</title>
<description>&lt;table class=&quot;twtable&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Title&lt;/td&gt;&lt;td&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;TiddlyChatter&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Summary&lt;/td&gt;&lt;td&gt;Opt-in, decentralized collaboration&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Description&lt;/td&gt;&lt;td&gt;This component spans several javascript files and depends on a number of other plugins&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Version of product it works with&lt;/td&gt;&lt;td&gt;2.2.5&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Version of component&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Image illustrating it working&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Explanation of how it can be used and modified&lt;/td&gt;&lt;td&gt;see below for necessary plugins&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td&gt;Examples where it can be seen working&lt;/td&gt;&lt;td&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/examples/tiddlychatter0-5.html&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/examples/tiddlychatter0-5.html&quot; class=&quot;externalLink&quot;&gt;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/examples/tiddlychatter0-5.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td&gt;Links to reviews and discussion&lt;/td&gt;&lt;td&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://jayfresh.wordpress.com/category/tiddlychatter/&quot; href=&quot;http://jayfresh.wordpress.com/category/tiddlychatter/&quot; class=&quot;externalLink&quot;&gt;http://jayfresh.wordpress.com/category/tiddlychatter/&lt;/a&gt; &lt;a target=&quot;_blank&quot; title=&quot;External link to http://groups.google.com/group/TiddlyWikiDev/browse_thread/thread/ac0532d241e2cb1a&quot; href=&quot;http://groups.google.com/group/TiddlyWikiDev/browse_thread/thread/ac0532d241e2cb1a&quot; class=&quot;externalLink&quot;&gt;http://groups.google.com/group/TiddlyWikiDev/browse_thread/thread/ac0532d241e2cb1a&lt;/a&gt; &lt;a target=&quot;_blank&quot; title=&quot;External link to http://groups.google.com/group/TiddlyWikiDev/browse_thread/thread/f6e11d6c56d26817/5c204eaed61855f2&quot; href=&quot;http://groups.google.com/group/TiddlyWikiDev/browse_thread/thread/f6e11d6c56d26817/5c204eaed61855f2&quot; class=&quot;externalLink&quot;&gt;http://groups.google.com/group/TiddlyWikiDev/browse_thread/thread/f6e11d6c56d26817/5c204eaed61855f2&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;The following plugins are built for &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;TiddlyChatter&lt;/a&gt;:&lt;br&gt;&lt;br&gt;&lt;table class=&quot;twtable&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;tiddlyChatterSetup code&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#tiddlyChatterSetup code&quot; href=&quot;http://www.tiddlywiki.com/#tiddlyChatterSetup%20code&quot; class=&quot;externalLink&quot;&gt;tiddlyChatterSetup code&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterSetup_code.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterSetup_code.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;tiddlyChatterIncoming&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#tiddlyChatterIncoming&quot; href=&quot;http://www.tiddlywiki.com/#tiddlyChatterIncoming&quot; class=&quot;externalLink&quot;&gt;tiddlyChatterIncoming&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterIncoming.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterIncoming.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;tiddlyChatterPublishing&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#tiddlyChatterPublishing&quot; href=&quot;http://www.tiddlywiki.com/#tiddlyChatterPublishing&quot; class=&quot;externalLink&quot;&gt;tiddlyChatterPublishing&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterPublishing.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterPublishing.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;tiddlyChatterControlPanel&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#tiddlyChatterControlPanel&quot; href=&quot;http://www.tiddlywiki.com/#tiddlyChatterControlPanel&quot; class=&quot;externalLink&quot;&gt;tiddlyChatterControlPanel&lt;/a&gt; (being replaced by content of item below)&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterControlPanel.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/TiddlyChatter/js/tiddlyChatterControlPanel.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;lv macro&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#lv macro&quot; href=&quot;http://www.tiddlywiki.com/#lv%20macro&quot; class=&quot;externalLink&quot;&gt;lv macro&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/js/lv.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/js/lv.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;The following plugins are used in a modified state (link to modified source in last column):&lt;br&gt;&lt;br&gt;&lt;table class=&quot;twtable&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;NotesPlugin&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#NotesPlugin&quot; href=&quot;http://www.tiddlywiki.com/#NotesPlugin&quot; class=&quot;externalLink&quot;&gt;NotesPlugin&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;SaqImtiaz&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#SaqImtiaz&quot; href=&quot;http://www.tiddlywiki.com/#SaqImtiaz&quot; class=&quot;externalLink&quot;&gt;SaqImtiaz&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://tw.lewcid.org/#NotesPlugin&quot; href=&quot;http://tw.lewcid.org/#NotesPlugin&quot; class=&quot;externalLink&quot;&gt;original source&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/TiddlyChatter/NotesPlugin_JRL.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/TiddlyChatter/NotesPlugin_JRL.js&quot; class=&quot;externalLink&quot;&gt;modified source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;ImportWorkspacePlugin&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#ImportWorkspacePlugin&quot; href=&quot;http://www.tiddlywiki.com/#ImportWorkspacePlugin&quot; class=&quot;externalLink&quot;&gt;ImportWorkspacePlugin&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by Martin Budden&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/MartinBudden/adaptors/ImportWorkspacePlugin.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/MartinBudden/adaptors/ImportWorkspacePlugin.js&quot; class=&quot;externalLink&quot;&gt;original source&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/TiddlyChatter/ImportWorkspacePlugin_JRL.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/TiddlyChatter/ImportWorkspacePlugin_JRL.js&quot; class=&quot;externalLink&quot;&gt;modified source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;The following plugins are used without modification:&lt;br&gt;&lt;br&gt;&lt;table class=&quot;twtable&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;RSSAdaptor&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#RSSAdaptor&quot; href=&quot;http://www.tiddlywiki.com/#RSSAdaptor&quot; class=&quot;externalLink&quot;&gt;RSSAdaptor&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/RSSAdaptor/js/rssadaptor.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/RSSAdaptor/js/rssadaptor.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;RSSrender plugin&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#RSSrender plugin&quot; href=&quot;http://www.tiddlywiki.com/#RSSrender%20plugin&quot; class=&quot;externalLink&quot;&gt;RSSRender&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/RSSAdaptor/js/RSSRender.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/RSSAdaptor/js/RSSRender.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;center&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;File adaptor filter plugin&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#File adaptor filter plugin&quot; href=&quot;http://www.tiddlywiki.com/#File%20adaptor%20filter%20plugin&quot; class=&quot;externalLink&quot;&gt;File adaptor filter plugin&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/js/File_adaptor_filter_plugin.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/verticals/TiddlyChatter/js/File_adaptor_filter_plugin.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;oddRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;TaggedTemplateTweak&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#TaggedTemplateTweak&quot; href=&quot;http://www.tiddlywiki.com/#TaggedTemplateTweak&quot; class=&quot;externalLink&quot;&gt;TaggedTemplateTweak&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;EricShulman&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#EricShulman&quot; href=&quot;http://www.tiddlywiki.com/#EricShulman&quot; class=&quot;externalLink&quot;&gt;EricShulman&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://www.TiddlyTools.com/#TaggedTemplateTweak&quot; href=&quot;http://www.TiddlyTools.com/#TaggedTemplateTweak&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;evenRow&quot;&gt;&lt;td align=&quot;left&quot;&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;stickyOptionsPlugin&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#stickyOptionsPlugin&quot; href=&quot;http://www.tiddlywiki.com/#stickyOptionsPlugin&quot; class=&quot;externalLink&quot;&gt;stickyOptionsPlugin&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;SaqImtiaz&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#SaqImtiaz&quot; href=&quot;http://www.tiddlywiki.com/#SaqImtiaz&quot; class=&quot;externalLink&quot;&gt;SaqImtiaz&lt;/a&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://tw.lewcid.org/#StickyOptionsPlugin&quot; href=&quot;http://tw.lewcid.org/#StickyOptionsPlugin&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;|&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;Unread&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#Unread&quot; href=&quot;http://www.tiddlywiki.com/#Unread&quot; class=&quot;externalLink&quot;&gt;Unread&lt;/a&gt; |by &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;JonLister&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#JonLister&quot; href=&quot;http://www.tiddlywiki.com/#JonLister&quot; class=&quot;externalLink&quot;&gt;JonLister&lt;/a&gt; |&lt;a target=&quot;_blank&quot; title=&quot;External link to http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/Unread/js/Unread.js&quot; href=&quot;http://svn.tiddlywiki.org/Trunk/contributors/JonathanLister/components/Unread/js/Unread.js&quot; class=&quot;externalLink&quot;&gt;source&lt;/a&gt;&lt;br&gt;&lt;br&gt;The following tiddlers are not plugins, but are part of the config:&lt;br&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;publicViewTemplate&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#publicViewTemplate&quot; href=&quot;http://www.tiddlywiki.com/#publicViewTemplate&quot; class=&quot;externalLink&quot;&gt;publicViewTemplate&lt;/a&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;ImportWorkspacePlugin&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#ImportWorkspacePlugin&quot; href=&quot;http://www.tiddlywiki.com/#ImportWorkspacePlugin&quot; class=&quot;externalLink&quot;&gt;ImportWorkspacePlugin&lt;/a&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#ChatterFeed&quot; href=&quot;http://www.tiddlywiki.com/#ChatterFeed&quot; class=&quot;externalLink&quot;&gt;ChatterFeed&lt;/a&gt;&lt;br&gt;&lt;br&gt;The following tiddlers provide additional information or run plugins:&lt;br&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;MainMenu&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#MainMenu&quot; href=&quot;http://www.tiddlywiki.com/#MainMenu&quot; class=&quot;externalLink&quot;&gt;MainMenu&lt;/a&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;Welcome to TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#Welcome to TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#Welcome%20to%20TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;Welcome to TiddlyChatter&lt;/a&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;Setting up TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#Setting up TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#Setting%20up%20TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;Setting up TiddlyChatter&lt;/a&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;What is TiddlyChatter?&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#What is TiddlyChatter?&quot; href=&quot;http://www.tiddlywiki.com/#What%20is%20TiddlyChatter?&quot; class=&quot;externalLink&quot;&gt;What is TiddlyChatter?&lt;/a&gt;&lt;br&gt;&lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;lv macro&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#lv macro&quot; href=&quot;http://www.tiddlywiki.com/#lv%20macro&quot; class=&quot;externalLink&quot;&gt;lv macro&lt;/a&gt; (working name)</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#TiddlyChatterDocumentation</link>
<pubDate>Tue, 16 Oct 2007 11:07:30 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>StyleSheet</title>
<description>&lt;pre&gt;#channelBox {background:#BBBB33;}
#newChannelBox {background:#33BBBB;}
#subscriptionBox {background:#CCCC22;}
#newSubscriptionBox {background:#22CCCC;}
.publishing, .unread {
   background-color: #EEEEEE;
   border: 1px solid #EEEEEE;
   float: right;
   margin: 0.5em;
   font-size: 0.9em;
   padding: 0.25em;
}
.selected .publishing, .selected .unread {
   background-color: #CCCCCC;
   border: 1px solid #999999;
}
.publishing .button, .unread .button {
   border: medium none;
}
.publishing ul {
   list-style-image: none;
   list-style-position: outside;
   list-style-type: none;
   margin: 0.25em;
   padding: 0pt;
}
tr.tiddlyChatterIncomingRowUnread {
	background-color: #C44;
}
&lt;/pre&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#StyleSheet</link>
<pubDate>Tue, 16 Oct 2007 11:04:55 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>DefaultTiddlers</title>
<description>&lt;a tiddlylink=&quot;Welcome to TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#Welcome to TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#Welcome%20to%20TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;Welcome to TiddlyChatter&lt;/a&gt;&lt;br&gt;&lt;a tiddlylink=&quot;lv macro&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#lv macro&quot; href=&quot;http://www.tiddlywiki.com/#lv%20macro&quot; class=&quot;externalLink&quot;&gt;lv macro&lt;/a&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#DefaultTiddlers</link>
<pubDate>Tue, 16 Oct 2007 11:04:32 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>MainMenu</title>
<description>&lt;a tiddlylink=&quot;Welcome to TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#Welcome to TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#Welcome%20to%20TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;Welcome&lt;/a&gt;&lt;br&gt;&lt;a tiddlylink=&quot;Setting up TiddlyChatter&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#Setting up TiddlyChatter&quot; href=&quot;http://www.tiddlywiki.com/#Setting%20up%20TiddlyChatter&quot; class=&quot;externalLink&quot;&gt;Set-up info&lt;/a&gt;&lt;br&gt;&lt;a tiddlylink=&quot;BUGS&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#BUGS&quot; href=&quot;http://www.tiddlywiki.com/#BUGS&quot; class=&quot;externalLink&quot;&gt;BUGS&lt;/a&gt;&lt;br&gt;&lt;br&gt;TiddlyChatter controls&lt;br&gt;&lt;hr&gt;&lt;a newtext=&quot;Type some text and then press DONE&quot; customfields=&quot;server.type:&amp;quot;RSS&amp;quot; server.host:&amp;quot;http://jonny.jonathan.googlepages.com/tiddlychatter.xml&amp;quot; server.workspace:&amp;quot;&amp;quot; server.filter:&amp;quot;[tag[public]]&amp;quot;&quot; newtemplate=&quot;2&quot; newfocus=&quot;title&quot; params=&quot;public&quot; isjournal=&quot;false&quot; newtitle=&quot;NewChatter&quot; accesskey=&quot;N&quot; class=&quot;button&quot; title=&quot;Create a new tiddler&quot; href=&quot;javascript:;&quot;&gt;New Chatter&lt;/a&gt;&lt;br&gt;&lt;a tiddlylink=&quot;lv macro&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#lv macro&quot; href=&quot;http://www.tiddlywiki.com/#lv%20macro&quot; class=&quot;externalLink&quot;&gt;Control panel&lt;/a&gt;&lt;br&gt;&lt;a customfields=&quot;server.type:&amp;quot;RSS&amp;quot; server.host:&amp;quot;http://jonny.jonathan.googlepages.com/tiddlychatter.xml&amp;quot; server.workspace:&amp;quot;&amp;quot; server.filter:&amp;quot;[tag[public]]&amp;quot;&quot; class=&quot;button&quot; title=&quot;Import tiddlers in workspace&quot; href=&quot;javascript:;&quot;&gt;Go chatter!&lt;/a&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#MainMenu</link>
<pubDate>Tue, 16 Oct 2007 11:04:21 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>BUGS</title>
<description>&lt;ul&gt;&lt;li&gt; refresh mechanism implemented in a way I don't fully understand - could be unstable?&lt;/li&gt;&lt;/ul&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#BUGS</link>
<pubDate>Tue, 16 Oct 2007 11:03:58 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>Setting up TiddlyChatter</title>
<description>The key to TiddlyChatter is your subscription to someone else's &quot;ChatterStream&quot;, which you can manage from the &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;lv macro&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#lv macro&quot; href=&quot;http://www.tiddlywiki.com/#lv%20macro&quot; class=&quot;externalLink&quot;&gt;TiddlyChatter control panel&lt;/a&gt;. Click &quot;manage&quot; and then &quot;new subscription&quot; and put in the URL of a TiddlyWiki which is publishing a stream. You have been set up with one subscription, called &lt;a tiddlyfields=&quot;server.host:&amp;quot;file:///Users/jonathanlister/Documents/osmosoft/tiddlywikis/tiddlychatter/tiddlychatter.xml&amp;quot; server.type:&amp;quot;RSS&amp;quot; server.workspace:&amp;quot;&amp;quot;&quot; tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://www.tiddlywiki.com/#ChatterFeed&quot; href=&quot;http://www.tiddlywiki.com/#ChatterFeed&quot; class=&quot;externalLink&quot;&gt;ChatterFeed&lt;/a&gt;, to some test content on the web.&lt;br&gt;&lt;br&gt;Currently, TiddlyChatter supports subscribing to one person's stream.&lt;br&gt;&lt;br&gt;Hitting &quot;Get&quot; downloads your updates. New content is displayed in red. When you save your TiddlyWiki, your own updates are published into your stream.&lt;br&gt;&lt;br&gt;All the tiddlers necessary to run TiddlyChatter are tagged &lt;a tag=&quot;TiddlyChatter&quot; class=&quot;button&quot; title=&quot;Show tiddlers tagged with 'TiddlyChatter'&quot; href=&quot;javascript:;&quot;&gt;TiddlyChatter&lt;/a&gt; for ease of import.</description>
<category>info</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#%5B%5BSetting%20up%20TiddlyChatter%5D%5D</link>
<pubDate>Fri, 05 Oct 2007 10:10:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>TC MotherBoard</title>
<description>&lt;a customfields=&quot;server.type:&amp;quot;RSS&amp;quot; server.host:&amp;quot;http://jonny.jonathan.googlepages.com/tiddlychatter.xml&amp;quot; server.workspace:&amp;quot;&amp;quot; server.filter:&amp;quot;[tag[public]]&amp;quot;&quot; class=&quot;button&quot; title=&quot;Import tiddlers in workspace&quot; href=&quot;javascript:;&quot;&gt;Go chatter!&lt;/a&gt;&lt;a newtext=&quot;Type some text and then press DONE&quot; customfields=&quot;server.type:&amp;quot;RSS&amp;quot; server.host:&amp;quot;http://jonny.jonathan.googlepages.com/tiddlychatter.xml&amp;quot; server.workspace:&amp;quot;&amp;quot; server.filter:&amp;quot;[tag[public]]&amp;quot;&quot; newtemplate=&quot;2&quot; newfocus=&quot;title&quot; params=&quot;public&quot; isjournal=&quot;false&quot; newtitle=&quot;NewChatter&quot; accesskey=&quot;N&quot; class=&quot;button&quot; title=&quot;Create a new tiddler&quot; href=&quot;javascript:;&quot;&gt;New Chatter&lt;/a&gt;&lt;div force=&quot;true&quot; refresh=&quot;content&quot; id=&quot;tiddlyChatterIncomingWrapper&quot;&gt;&lt;table id=&quot;tiddlyChatterIncomingTable&quot;&gt;&lt;tr id=&quot;tiddlyChatterIncomingHeader&quot;&gt;&lt;th&gt;Latest update&lt;/th&gt;&lt;th&gt;Title (no. of updates)&lt;/th&gt;&lt;th&gt;Last updated by&lt;/th&gt;&lt;/tr&gt;&lt;tr class=&quot;tiddlyChatterIncomingRow&quot;&gt;&lt;td&gt;18 days ago&lt;/td&gt;&lt;td&gt;&lt;a tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; class=&quot;tiddlyLink tiddlyLinkExisting&quot; title=&quot;ChatterFeed - Jon Lister, Thu Sep 27 18:41:00 2007&quot; href=&quot;javascript:;&quot;&gt;ChatterFeed (new)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Jon Lister&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id=&quot;streamManagementWrapper&quot;&gt;&lt;div id=&quot;subscriptionWrapper&quot;&gt;&lt;div id=&quot;subscriptionBox&quot;&gt;&lt;a class=&quot;button&quot; title=&quot;New subscription&quot; href=&quot;javascript:;&quot;&gt;New subscription&lt;/a&gt;&lt;br&gt;&lt;a tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; class=&quot;tiddlyLink tiddlyLinkExisting&quot; title=&quot;ChatterFeed - Jon Lister, Thu Sep 27 18:41:00 2007&quot; href=&quot;javascript:;&quot;&gt;ChatterFeed&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;display: none;&quot; id=&quot;newSubscriptionBox&quot;&gt;&lt;span&gt;Please point to the stream list you want to subscribe to&lt;/span&gt;&lt;br&gt;&lt;span&gt;URL:&lt;/span&gt;&lt;input id=&quot;newSubscriptionURL&quot;&gt;&lt;a class=&quot;button&quot; title=&quot;View stream list&quot; href=&quot;javascript:;&quot;&gt;go&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#%5B%5BTC%20MotherBoard%5D%5D</link>
<pubDate>Fri, 05 Oct 2007 10:09:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>TiddlyChatter control panel</title>
<description>This is a basic interface for managing streams and subscriptions&lt;br&gt;&lt;br&gt;&lt;div id=&quot;streamManagementWrapper&quot;&gt;&lt;div id=&quot;subscriptionWrapper&quot;&gt;&lt;div id=&quot;subscriptionBox&quot;&gt;&lt;a class=&quot;button&quot; title=&quot;New subscription&quot; href=&quot;javascript:;&quot;&gt;New subscription&lt;/a&gt;&lt;br&gt;&lt;a tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; class=&quot;tiddlyLink tiddlyLinkExisting&quot; title=&quot;ChatterFeed - Jon Lister, Thu Sep 27 18:41:00 2007&quot; href=&quot;javascript:;&quot;&gt;ChatterFeed&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;display: none;&quot; id=&quot;newSubscriptionBox&quot;&gt;&lt;span&gt;Please point to the stream list you want to subscribe to&lt;/span&gt;&lt;br&gt;&lt;span&gt;URL:&lt;/span&gt;&lt;input id=&quot;newSubscriptionURL&quot;&gt;&lt;a class=&quot;button&quot; title=&quot;View stream list&quot; href=&quot;javascript:;&quot;&gt;go&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#%5B%5BTiddlyChatter%20control%20panel%5D%5D</link>
<pubDate>Fri, 05 Oct 2007 10:09:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>tiddlyChatterPublishing</title>
<description>/* Update on 09/10/07: SIMPLIFICATION&lt;br&gt; * No longer offering a choice of streams by default&lt;br&gt; * ID for stream tiddlers now supplied as a parameter */&lt;br&gt;&lt;br&gt;config.macros.publishing = {};&lt;br&gt;&lt;br&gt;config.macros.publishing.handler = function(place,macroName,params,wikifier,paramString,tiddler) {&lt;br&gt;&lt;br&gt;	&lt;em&gt; publishing puts a box on a tiddler that shows:&lt;br&gt;	&lt;/em&gt; if the tiddler is not 'published', a 'publish' button -&lt;br&gt;	&lt;em&gt;  - hitting 'publish' drops a menu of available streams to choose from;&lt;br&gt;	&lt;/em&gt; if the tiddler is published, a 'published' label -&lt;br&gt;	&lt;em&gt;  - hitting 'published' drops a menu of streams the tiddler is published in&lt;br&gt;	&lt;/em&gt;  - plus the list of streams that you can also publish it in&lt;br&gt;	&lt;em&gt; being published is defined as being tagged with a channel name&lt;br&gt;	var published = false;&lt;br&gt;	var publications = {};&lt;br&gt;	&lt;/em&gt; collect a list of streams and label them as being streams this tiddler is published in or not&lt;br&gt;	params = paramString.parseParams(&quot;anon&quot;,null,true,false,false);&lt;br&gt;	&lt;em&gt; stream_id defines what a stream tiddler is tagged with&lt;br&gt;	&lt;/em&gt; if we haven't supplied that parameter, we just look at whether this tiddler is tagged published or not&lt;br&gt;	var stream_id = getParam(params,&quot;stream_id&quot;,null);&lt;br&gt;	if (stream_id) {&lt;br&gt;		var streams = store.getTaggedTiddlers(stream_id);&lt;br&gt;		publications = {'yes':[], 'no':[]};&lt;br&gt;		for (var i=0;i&amp;lt;streams.length;i++) {&lt;br&gt;			if (tiddler.isTagged(streams[i].title)) {&lt;br&gt;				publications.yes.push(streams[i]);&lt;br&gt;			} else {&lt;br&gt;				publications.no.push(streams[i]);&lt;br&gt;			}&lt;br&gt;		}&lt;br&gt;		if (publications.yes.length !== 0) {&lt;br&gt;			published = true;&lt;br&gt;		}&lt;br&gt;	} else {&lt;br&gt;		if (tiddler.isTagged(&quot;published&quot;)) {&lt;br&gt;			published = true;&lt;br&gt;		}&lt;br&gt;	}&lt;br&gt;	if (published) {&lt;br&gt;		&lt;em&gt; add a published box&lt;br&gt;		var thePublishedBox = createTiddlyButton(place,&quot;Published&quot;,&quot;Click to unpublish&quot;);&lt;br&gt;		&lt;/em&gt; is there is no stream_id, we are not working with streams, so clicking Published unpublishes the content, which means updates will no longer appear in the stream&lt;br&gt;		if (stream_id) {&lt;br&gt;			thePublishedBox.onclick = this.reveal;&lt;br&gt;			&lt;em&gt; create the published list&lt;br&gt;			var thePublishedList = createTiddlyElement(place,&quot;ul&quot;);&lt;br&gt;			thePublishedList.style.display = &quot;none&quot;;&lt;br&gt;			for (var i=0;i&amp;lt;publications.yes.length;i++) {&lt;br&gt;				&lt;/em&gt; for the published list just present a simple list&lt;br&gt;				var streamItem = createTiddlyElement(thePublishedList,&quot;li&quot;,null,null,publications.yes[i].title);&lt;br&gt;			}&lt;br&gt;		} else {&lt;br&gt;			thePublishedBox.onclick = function() {&lt;br&gt;				config.macros.publishing.unsubscribe.call(this,&quot;published&quot;);&lt;br&gt;			};&lt;br&gt;		}&lt;br&gt;	} else {&lt;br&gt;		&lt;em&gt; add a publish box&lt;br&gt;		var thePublishBox = createTiddlyButton(place,&quot;Publish&quot;,&quot;Click to publish&quot;);&lt;br&gt;		&lt;/em&gt; if there is no stream_id, we are not working with streams, so clicking publish just adds &quot;published&quot; to the tiddler's tags&lt;br&gt;		if (stream_id) {&lt;br&gt;			thePublishBox.onclick = this.reveal;&lt;br&gt;			&lt;em&gt; create the publish list&lt;br&gt;			var thePublishListBox = createTiddlyElement(place,&quot;div&quot;);&lt;br&gt;			thePublishListBox.style.display = &quot;none&quot;;&lt;br&gt;			var thePublishList = createTiddlyElement(thePublishListBox,&quot;ul&quot;);&lt;br&gt;			for (var i=0;i&amp;lt;publications.no.length;i++) {&lt;br&gt;				&lt;/em&gt; for the publish list present a list of buttons&lt;br&gt;				var streamItem = createTiddlyElement(thePublishList,&quot;li&quot;);&lt;br&gt;				createTiddlyButton(streamItem,publications.no[i].title,publications.no[i].title,this.subscribe);&lt;br&gt;			}&lt;br&gt;			&lt;em&gt; CROSS-PLUGIN DEPENDENCY!&lt;br&gt;			if (config.macros.tiddlyChatterSetup) {&lt;br&gt;				var newStream = createTiddlyButton(thePublishListBox,&quot;new stream...&quot;,&quot;Create a new stream&quot;,this.reveal);&lt;br&gt;				var newStreamBox = createTiddlyElement(thePublishListBox,&quot;div&quot;);&lt;br&gt;				newStreamBox.style.display = &quot;none&quot;;&lt;br&gt;				&lt;/em&gt; next line to give input box and go button same depth as list items above&lt;br&gt;				&lt;em&gt; so the subscribe function points to the parent tiddler properly in both cases&lt;br&gt;				var newStreamList = createTiddlyElement(newStreamBox,&quot;div&quot;);&lt;br&gt;				var newStreamInput = createTiddlyElement(newStreamList,&quot;input&quot;,null,null);&lt;br&gt;				newStreamInput.setAttribute(&quot;size&quot;,&quot;5&quot;);&lt;br&gt;				createTiddlyButton(newStreamList,&quot;go&quot;,&quot;go&quot;,config.macros.publishing.onClickNewChannel);&lt;br&gt;			}&lt;br&gt;		} else {&lt;br&gt;			thePublishBox.onclick = function() {&lt;br&gt;				config.macros.publishing.subscribe.call(this,&quot;published&quot;);&lt;br&gt;			};&lt;br&gt;		}&lt;br&gt;	}&lt;br&gt;};&lt;br&gt;&lt;br&gt;config.macros.publishing.onClickNewChannel = function() {&lt;br&gt;	&lt;/em&gt; call the onclick for the stream creator, setting 'this' to the current value of 'this'&lt;br&gt;	config.macros.tiddlyChatterSetup.onClickNewChannel.call(this);&lt;br&gt;	&lt;em&gt; now subscribe to this channel&lt;br&gt;	var created = false;&lt;br&gt;	if (store.fetchTiddler(this.previousSibling.value)) {&lt;br&gt;		created = true;&lt;br&gt;	}&lt;br&gt;	&lt;/em&gt; subscribe, setting 'this' to be the input with the new stream name in&lt;br&gt;	this.previousSibling.textContent = this.previousSibling.value;&lt;br&gt;	config.macros.publishing.subscribe.call(this.previousSibling);&lt;br&gt;};&lt;br&gt;&lt;br&gt;&lt;em&gt; onclick for channel names; 'this' refers to the link&lt;br&gt;config.macros.publishing.subscribe = function(tag) {&lt;br&gt;&lt;br&gt;	var DOMTiddler = story.findContainingTiddler(this);&lt;br&gt;	var tiddler = store.fetchTiddler(DOMTiddler.attributes.tiddler.textContent);&lt;br&gt;	if (!tag) {&lt;br&gt;		tag = this.textContent;&lt;br&gt;	}&lt;br&gt;	tiddler.tags.push(tag);&lt;br&gt;	tiddler.set(tiddler.title,tiddler.text,tiddler.modifier,tiddler.modified,tiddler.tags,tiddler.created,tiddler.fields);&lt;br&gt;	story.refreshTiddler(DOMTiddler.getAttribute(&quot;tiddler&quot;),DOMTiddler.getAttribute(&quot;template&quot;),true);&lt;br&gt;};&lt;br&gt;&lt;br&gt;&lt;/em&gt; onclick for channel names when published; 'this' refers to the link&lt;br&gt;config.macros.publishing.unsubscribe = function(tag) {&lt;br&gt;&lt;br&gt;	var DOMTiddler = story.findContainingTiddler(this);&lt;br&gt;	var tiddler = store.fetchTiddler(DOMTiddler.attributes.tiddler.textContent);&lt;br&gt;	if (!tag) {&lt;br&gt;		tag = this.textContent;&lt;br&gt;	}&lt;br&gt;	tiddler.tags.splice(tiddler.tags.indexOf(tag),1);&lt;br&gt;	tiddler.set(tiddler.title,tiddler.text,tiddler.modifier,tiddler.modified,tiddler.tags,tiddler.created,tiddler.fields);&lt;br&gt;	story.refreshTiddler(DOMTiddler.getAttribute(&quot;tiddler&quot;),DOMTiddler.getAttribute(&quot;template&quot;),true);&lt;br&gt;};&lt;br&gt;&lt;br&gt;&lt;em&gt; onclick for &quot;publish&quot; buttons; 'this' refers to the span&lt;br&gt;config.macros.publishing.reveal = function() {&lt;br&gt;	&lt;/em&gt; create an interface to give your channel an id&lt;br&gt;	var slideBox = this.nextSibling;&lt;br&gt;	var isOpen = slideBox.style.display != &quot;none&quot;;&lt;br&gt;	if(anim &amp;amp;&amp;amp; typeof Slider == &quot;function&quot;)&lt;br&gt;		anim.startAnimating(new Slider(slideBox,!isOpen,null,&quot;none&quot;));&lt;br&gt;	else&lt;br&gt;		slideBox.style.display = isOpen ? &quot;none&quot; : &quot;block&quot;;&lt;br&gt;};</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#tiddlyChatterPublishing</link>
<pubDate>Thu, 04 Oct 2007 15:09:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>publicViewTemplate</title>
<description>&lt;pre&gt;&amp;lt;div class='toolbar' macro='toolbar closeTiddler closeOthers +editTiddler &amp;gt; fields syncing permalink references jump'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='title' macro='view title'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='subtitle'&amp;gt;&amp;lt;span macro='view modifier link'&amp;gt;&amp;lt;/span&amp;gt;, &amp;lt;span macro='view modified date'&amp;gt;&amp;lt;/span&amp;gt; (&amp;lt;span macro='message views.wikified.createdPrompt'&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span macro='view created date'&amp;gt;&amp;lt;/span&amp;gt;)&amp;lt;/div&amp;gt;
&amp;lt;div class='tagging' macro='tagging'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='tagged' macro='tags'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='publishing' macro='publishing'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='unread' macro='unread'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='viewer' macro='view text wikified'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='viewer' macro='notes tags:&quot;notes public&quot;'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class='tagClear'&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#publicViewTemplate</link>
<pubDate>Thu, 04 Oct 2007 10:05:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>lv macro</title>
<description>&lt;table class=&quot;listView twtable&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Latest update&lt;/th&gt;&lt;th&gt;Title (no. of updates)&lt;/th&gt;&lt;th&gt;Last updated by&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr class=&quot;tiddlyChatterIncomingRow&quot;&gt;&lt;td&gt;18 days ago&lt;/td&gt;&lt;td&gt;&lt;a tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; class=&quot;tiddlyLink tiddlyLinkExisting&quot; title=&quot;ChatterFeed - Jon Lister, Thu Sep 27 18:41:00 2007&quot; href=&quot;javascript:;&quot;&gt;ChatterFeed (new)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Jon Lister&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;a class=&quot;button&quot; href=&quot;javascript:;&quot;&gt;Get&lt;/a&gt;&lt;a class=&quot;button&quot; href=&quot;javascript:;&quot;&gt;Create&lt;/a&gt;&lt;a class=&quot;button&quot; href=&quot;javascript:;&quot;&gt;Manage&lt;/a&gt;&lt;a errortext=&quot;Error while executing macro &amp;lt;&amp;lt;lv&amp;gt;&amp;gt;:
TypeError: this_tiddler has no properties&quot; class=&quot;errorButton&quot; href=&quot;javascript:;&quot;&gt;Error in macro &amp;lt;&amp;lt;lv&amp;gt;&amp;gt;&lt;/a&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#%5B%5Blv%20macro%5D%5D</link>
<pubDate>Wed, 03 Oct 2007 17:20:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>Incoming!</title>
<description>&lt;div force=&quot;true&quot; refresh=&quot;content&quot; id=&quot;tiddlyChatterIncomingWrapper&quot;&gt;&lt;table id=&quot;tiddlyChatterIncomingTable&quot;&gt;&lt;tr id=&quot;tiddlyChatterIncomingHeader&quot;&gt;&lt;th&gt;Latest update&lt;/th&gt;&lt;th&gt;Title (no. of updates)&lt;/th&gt;&lt;th&gt;Last updated by&lt;/th&gt;&lt;/tr&gt;&lt;tr class=&quot;tiddlyChatterIncomingRow&quot;&gt;&lt;td&gt;18 days ago&lt;/td&gt;&lt;td&gt;&lt;a tiddlylink=&quot;ChatterFeed&quot; refresh=&quot;link&quot; class=&quot;tiddlyLink tiddlyLinkExisting&quot; title=&quot;ChatterFeed - Jon Lister, Thu Sep 27 18:41:00 2007&quot; href=&quot;javascript:;&quot;&gt;ChatterFeed (new)&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Jon Lister&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</description>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#Incoming!</link>
<pubDate>Wed, 03 Oct 2007 17:20:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>tiddlyChatterIncoming</title>
<description>&lt;pre&gt;//TiddlyChatter incoming messages

config.macros.tiddlyChatterIncoming = {};

// takes a param that is a filter of the form [tag[xxx yyy]], where xxx yyy
// represents any number of tags
config.macros.tiddlyChatterIncoming.handler = function(place,macroName,params){

	var tagFilter;
	if (params) {
		tagFilter = params[0];
	}
	// set up the UI
	var tciWrapper = createTiddlyElement(place,&quot;div&quot;,&quot;tiddlyChatterIncomingWrapper&quot;);
	tciWrapper.setAttribute(&quot;refresh&quot;,&quot;content&quot;);
	tciWrapper.setAttribute(&quot;force&quot;,&quot;true&quot;);
	var tciTable = createTiddlyElement(tciWrapper,&quot;table&quot;,&quot;tiddlyChatterIncomingTable&quot;);
	var tciTableHead = createTiddlyElement(tciTable,&quot;tr&quot;,&quot;tiddlyChatterIncomingHeader&quot;);
	createTiddlyElement(tciTableHead,&quot;th&quot;,null,null,&quot;Latest update&quot;);
	createTiddlyElement(tciTableHead,&quot;th&quot;,null,null,&quot;Title (no. of updates)&quot;);
	createTiddlyElement(tciTableHead,&quot;th&quot;,null,null,&quot;Last updated by&quot;);
	// now we have to add in the new content in table rows
	// content_and_notes holds our content and associated notes in the form:
	// [{content:content1,notes:[note1a,note1b]},{content:content2,notes[note2a,note2b]},...]
	var content_and_notes = [];
	var notes = [];
	var filteredContent = store.filterTiddlers(tagFilter);
	// process: collect the content first and set up the content_and_notes array
	// collect the notes at the same time and store them
	// sort notes by modify date
	// run through cotent, adding its notes to content_and_notes
	// sort content_and_notes by modify date of most recent note belonging to content
	for (var i=0;i&amp;lt;filteredContent.length;i++) {
		var t = filteredContent[i];
		if (t.isTagged(&quot;public&quot;)) {
			if (!t.isTagged(&quot;notes&quot;)) {
				// it's parent content
				content_and_notes.push({content:t,notes:[]});
			} else {
				// it's a note
				notes.push(t);
			}
		}
	}
	notes.sort(function(a,b){
		return a.modified &amp;gt; b.modified ? -1 : (a.modified == b.modified ? 0 : 1);
	});
	for (var i=0;i&amp;lt;content_and_notes.length;i++) {
		var content_object = content_and_notes[i];
		for (var j=0;j&amp;lt;notes.length;j++) {
			if (notes[j].title.indexOf(content_object[&quot;content&quot;].title) != -1) {
				// matched a note with a title containing a piece of content's title
				content_object[&quot;notes&quot;].push(notes[j]);
			}
		}
	}
	content_and_notes.sort(function(a,b){
		var a_most_recent, b_most_recent;
		// a[&quot;notes&quot;][0] is the most recent note for a piece of content, if it exists
		// if it doesn't exist, use the content itself
		if (a[&quot;notes&quot;][0]) {
			a_most_recent = a[&quot;notes&quot;][0];
		} else {
			a_most_recent = a[&quot;content&quot;];
		}
		if (b[&quot;notes&quot;][0]) {
			b_most_recent = b[&quot;notes&quot;][0];
		} else {
			b_most_recent = b[&quot;content&quot;];
		}
		return a_most_recent.modified &amp;gt; b_most_recent.modified ? -1 : (a_most_recent.modified == b_most_recent.modified ? 0 : 1);
	});
	// iterate through content_and_notes array, creating table rows as we go
	for (var i=0;i&amp;lt;content_and_notes.length;i++) {
		var content_object = content_and_notes[i];
		// noteCount is the number of notes in content_object[&quot;notes&quot;];
		var noteCount = content_object[&quot;notes&quot;] ? content_object[&quot;notes&quot;].length : 0;
		// newestNote is the first note in content_object[&quot;notes&quot;] or the content itself if there are no notes
		var newestNote = noteCount !== 0 ? content_object[&quot;notes&quot;][0] : content_object[&quot;content&quot;];
		// display &quot;new&quot; if noteCount is 0
		noteCount = noteCount === 0 ? &quot;new&quot; : noteCount;
		var tciTableRow = createTiddlyElement(tciTable,&quot;tr&quot;,null,&quot;tiddlyChatterIncomingRow&quot;);
		// if the content for this row is unread, give the row a class of &quot;unread&quot;
		// &quot;unread&quot; is a custom field on an imported tiddler
		if (newestNote.fields[&quot;unread&quot;]) {
			tciTableRow.setAttribute(&quot;class&quot;,&quot;tiddlyChatterIncomingRowUnread&quot;);
		}
		// we want to know how many days since the last update
		var daysSince = newestNote.modified.relativeDays();
		// display today or yesterday if daysSince is 0 or 1, respectively
		if (daysSince === 0) {
			daysSince = &quot;today&quot;;
		} else if (daysSince == 1) {
			daysSince = &quot;yesterday&quot;;
		} else {
			daysSince = daysSince + &quot; days ago&quot;;
		}
		createTiddlyElement(tciTableRow,&quot;td&quot;,null,null,daysSince);
		var contentTitle = content_object[&quot;content&quot;].title + &quot; (&quot; + noteCount +&quot;)&quot;;
		var contentTitleCell = createTiddlyElement(tciTableRow,&quot;td&quot;);
		var contentLink = createTiddlyLink(contentTitleCell,content_object[&quot;content&quot;].title);
		createTiddlyText(contentLink,contentTitle);
		contentLink.content_object = content_object;
		contentLink.onclick_old = contentLink.onclick;
		contentLink.onclick = function() {
			var titles = [];
			titles[0] = this.content_object[&quot;content&quot;].title;
			for (var i=0;i&amp;lt;this.content_object[&quot;notes&quot;].length;i++) {
				titles.push(this.content_object[&quot;notes&quot;][i].title);
			}
			for (var i=0;i&amp;lt;titles.length;i++) {
				var t = store.fetchTiddler(titles[i]);
				if (t.fields[&quot;unread&quot;] &amp;amp;&amp;amp; t.fields[&quot;unread&quot;] == &quot;true&quot;) {
					t.fields[&quot;unread&quot;] = false;
					t.set(t.title,t.text,t.modifier,t.modified,t.tags,t.created,t.fields);
				}
			}
			var this_tiddler = story.findContainingTiddler(this);
			story.refreshTiddler(this_tiddler.getAttribute(&quot;tiddler&quot;),this_tiddler.getAttribute(&quot;template&quot;),true);
		contentLink.onclick_old.apply(this,arguments);
		};
		createTiddlyElement(tciTableRow,&quot;td&quot;,null,null,newestNote.modifier);
	}
};

// Returns the number of days since the Date
Date.prototype.relativeDays = function() {
	var now = new Date();
	var interval = now.getTime() - this.getTime();
	interval = Math.floor(interval / (1000 * 60 * 60 * 24));
	return interval;
};
&lt;/pre&gt;</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#tiddlyChatterIncoming</link>
<pubDate>Wed, 03 Oct 2007 17:17:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>tiddlyChatterControlPanel</title>
<description>&lt;pre&gt;config.macros.tiddlyChatterControlPanel = {};

config.macros.tiddlyChatterControlPanel.handler = function(place,macroName,params,wikifier,paramString,tiddler) {
	if (config.macros.importWorkspace) {
		config.macros.importWorkspace.handler(place,&quot;importWorkspacePlugin&quot;,params,wikifier,paramString,tiddler);
	}
	if (config.macros.newTiddler) {
		config.macros.newTiddler.handler(place,&quot;newTiddler&quot;,&quot;{label:'New Chatter',title:'NewChatter',tag:'public',text:'Type some text and then press DONE'}&quot;,wikifier,&quot;label:'New Chatter' title:'NewChatter' tag:'public' text:'Type some text and then press DONE'&quot;,tiddler);
	}
	if (config.macros.tiddlyChatterIncoming) {
		config.macros.tiddlyChatterIncoming.handler(place,&quot;tiddlyChatterIncoming&quot;,params,wikifier,paramString,tiddler);
	}
	if (config.macros.tiddlyChatterSetup) {
		config.macros.tiddlyChatterSetup.handler(place,&quot;tiddlyChatterSetup&quot;,params,wikifier,paramString,tiddler);
	}
};
&lt;/pre&gt;</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#tiddlyChatterControlPanel</link>
<pubDate>Wed, 03 Oct 2007 17:17:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>Unread</title>
<description>config.macros.unread = {};&lt;br&gt;&lt;br&gt;config.macros.unread.handler = function(place,macroName,param,wikifier,paramString,tiddler) {&lt;br&gt;	&lt;em&gt; check to see if tiddler has extended field &quot;unread&quot;&lt;br&gt;	&lt;/em&gt; if so, add button to click to change status to read&lt;br&gt;	if (tiddler.fields[&quot;unread&quot;]) {&lt;br&gt;		var unread = tiddler.fields[&quot;unread&quot;];&lt;br&gt;		var label = unread == &quot;true&quot; ? &quot;Mark as read&quot; : &quot;Mark as unread&quot;;&lt;br&gt;		var caption = unread == &quot;false&quot; ? &quot;Click to mark as read&quot; : &quot;Click to mark as unread&quot;;&lt;br&gt;		var theUnreadBox = createTiddlyButton(place,label,caption);&lt;br&gt;		theUnreadBox.onclick = config.macros.unread.markAsRead;&lt;br&gt;	}&lt;br&gt;};&lt;br&gt;&lt;br&gt;config.macros.unread.markAsRead = function() {&lt;br&gt;	var DOMTiddler = story.findContainingTiddler(this);&lt;br&gt;	var t = store.fetchTiddler(DOMTiddler.getAttribute(&quot;tiddler&quot;));&lt;br&gt;	t.fields[&quot;unread&quot;] = t.fields[&quot;unread&quot;] == &quot;true&quot; ? &quot;false&quot; : &quot;true&quot;;&lt;br&gt;	&lt;em&gt; store.saveTiddler(t.title,t.title,t.text,t.modifier,t.modified,t.tags,t.fields,false,t.created);&lt;br&gt;	&lt;/em&gt; story.refreshTiddler(DOMTiddler.getAttribute(&quot;tiddler&quot;),DOMTiddler.getAttribute(&quot;template&quot;),true);&lt;br&gt;	story.refreshAllTiddlers();&lt;br&gt;	&lt;em&gt; the line above seems rather heavy-handed... what's an efficient way to make another tiddler respond to a change in this one's fields?&lt;br&gt;	&lt;/em&gt; also, if I don't save t back to the store, does this have any consequences? Or is it happening automatically?&lt;br&gt;};</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#Unread</link>
<pubDate>Tue, 02 Oct 2007 09:55:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>tiddlyChatterSetup code</title>
<description>&lt;pre&gt;/* Update on 09/10/07: SIMPLIFICATION
 * No longer offering a choice of streams by default
 * Boolean parameter provided to specify whether we are working with streams */

config.macros.tiddlyChatterSetup = {};

config.macros.tiddlyChatterSetup.handler = function(place,macroName,params,wikifier,paramString,tiddler) {

	params = paramString.parseParams(&quot;anon&quot;,null,true,false,false);
	// using_streams defines whether we are working with multiple streams
	var using_streams = getParam(params,&quot;using_streams&quot;,null);
	
	var streamManagementWrapper = createTiddlyElement(place,&quot;div&quot;,&quot;streamManagementWrapper&quot;);
	var channelBox;
	if(using_streams) {
		// create an interface for handling streams
		// a streams is a feed you publish
		// add a button to create new streams
		var channelWrapper = createTiddlyElement(streamManagementWrapper,&quot;div&quot;,&quot;channelWrapper&quot;);
		channelBox = createTiddlyElement(channelWrapper,&quot;div&quot;,&quot;channelBox&quot;);
		var newChannelButton = createTiddlyButton(channelBox,&quot;New stream&quot;,&quot;New stream&quot;,this.reveal);
		createTiddlyElement(channelBox,&quot;br&quot;);
		// set up the new channel UI to reveal when 'new channel' is clicked
		var newChannelBox = createTiddlyElement(channelWrapper,&quot;div&quot;,&quot;newChannelBox&quot;);
		newChannelBox.style.display = &quot;none&quot;;
		createTiddlyElement(newChannelBox,&quot;span&quot;,null,null,&quot;Please provide a name for your stream&quot;);
		createTiddlyElement(newChannelBox,&quot;br&quot;);
		createTiddlyElement(newChannelBox,&quot;span&quot;,null,null,&quot;Stream:&quot;);
		var channelName = createTiddlyElement(newChannelBox,&quot;input&quot;,&quot;newChannelName&quot;);
		createTiddlyButton(newChannelBox,&quot;create&quot;,&quot;Create stream&quot;,this.onClickNewChannel);
		createTiddlyElement(newChannelBox,&quot;br&quot;);
	}
	// create an interface for handling subscriptions
	// we do this whether or not using_streams is true
	// a subscription is to someone else's stream
	// add a button to create new subscriptions
	var subscriptionWrapper = createTiddlyElement(streamManagementWrapper,&quot;div&quot;,&quot;subscriptionWrapper&quot;);
	var subscriptionBox = createTiddlyElement(subscriptionWrapper,&quot;div&quot;,&quot;subscriptionBox&quot;);
	var newSubscriptionButton = createTiddlyButton(subscriptionBox,&quot;New subscription&quot;,&quot;New subscription&quot;,this.reveal);
	createTiddlyElement(subscriptionBox,&quot;br&quot;);
	// set up the new subscription UI to reveal when 'new subscription' is clicked
	var newSubscriptionBox = createTiddlyElement(subscriptionWrapper,&quot;div&quot;,&quot;newSubscriptionBox&quot;);
	newSubscriptionBox.style.display = &quot;none&quot;;
	createTiddlyElement(newSubscriptionBox,&quot;span&quot;,null,null,&quot;Please point to the stream list you want to subscribe to&quot;);
	createTiddlyElement(newSubscriptionBox,&quot;br&quot;);
	createTiddlyElement(newSubscriptionBox,&quot;span&quot;,null,null,&quot;URL:&quot;);
	var subscriptionURL = createTiddlyElement(newSubscriptionBox,&quot;input&quot;,&quot;newSubscriptionURL&quot;);
	createTiddlyButton(newSubscriptionBox,&quot;go&quot;,&quot;View stream list&quot;,this.onClickNewSubscription);
	createTiddlyElement(newSubscriptionBox,&quot;br&quot;);
	
	// a stream is defined as a tiddler tagged with systemServer, channel and the id of the channel
	// the id is what you tag your tiddler with to put it in that channel
	// a subscription is defined as a tiddler tagged with systemServer, channel, subscription and the id of the channel
	// a subscription is also a channel, in that you can subscribe to it
	var channels = [];
	var subscriptions = [];
	if (using_streams) {
		store.forEachTiddler(function(title,tiddler) {
			if (tiddler.isTagged(&quot;systemServer&quot;) &amp;amp;&amp;amp; tiddler.isTagged(&quot;channel&quot;)) {
				channels.push(tiddler);
				if (tiddler.isTagged(&quot;subscription&quot;)) {
					subscriptions.push(tiddler);
				}
			}
		});
		// the channels array now has all the channel tiddlers in it, so we add them to the channelBox
		for (var i=0;i&amp;lt;channels.length;i++) {
			createTiddlyLink(channelBox,channels[i].title,true);
			// if the channel is a subscription too, flag this to the user
			if (channels[i].isTagged(&quot;subscription&quot;)) {
				wikify(&quot;// - one of your own subscriptions//&quot;,channelBox);
			}
			createTiddlyElement(channelBox,&quot;br&quot;);
		}
	} else {
		store.forEachTiddler(function(title,tiddler) {
			if (tiddler.isTagged(&quot;systemServer&quot;) &amp;amp;&amp;amp; tiddler.isTagged(&quot;published&quot;)) {
				subscriptions.push(tiddler);
			}
		});
	}
	// the subscriptions array now has all the subscriptions tiddlers in it, so we add them to the subscriptionBox
	// we do this whether or not using_streams is true
	for (var i=0;i&amp;lt;subscriptions.length;i++) {
		createTiddlyLink(subscriptionBox,subscriptions[i].title,true);
		createTiddlyElement(subscriptionBox,&quot;br&quot;);
	}
	return streamManagementWrapper;
};

// onclick for creating a new channel; 'this' refers to the button
config.macros.tiddlyChatterSetup.onClickNewChannel = function() {
	var channelName = this.previousSibling.value;
	// create a new tiddler tagged with channel, systemServer and whatever id the user specified
	// a channel's filter is of the form [tag[public id]], where id is the same as above
	// we leave the URL field blank and let that be created by the subscription mechanism
	var tags = &quot;channel systemServer&quot;;
	tags += &quot; &quot; +channelName;
	var tiddlerBody = &quot;|''Type:''|RSS|\n|''URL:''||\n|''Workspace:''||\n|''TiddlerFilter:''|[tag[public &quot;+channelName+&quot;]]|&quot;;
	store.saveTiddler(channelName,channelName,tiddlerBody,config.options.txtUserName,null,tags);
	var this_tiddler = story.findContainingTiddler(this);
	story.refreshTiddler(this_tiddler.getAttribute(&quot;tiddler&quot;),this_tiddler.getAttribute(&quot;template&quot;),true);
};

// onclick after clicking the new subscription button; 'this' refers to the button
config.macros.tiddlyChatterSetup.onClickNewSubscription = function() {
	var subscriptionURL = document.getElementById(&quot;newSubscriptionURL&quot;).value;
	var place = document.getElementById(&quot;newSubscriptionBox&quot;);
	// load up the url provided and show a list of channels to subscribe to
	// assume we are pointing at a TiddlyWiki
	var adaptor = new FileAdaptor();
	var context = {};
	context.place = place;
	adaptor.openHost(subscriptionURL,context,null,config.macros.tiddlyChatterSetup.onOpenHost);
};

config.macros.tiddlyChatterSetup.onOpenHost = function(context,userParams) {
	if(context.status !== true) {
		displayMessage(&quot;error opening host: &quot; + context.statusText);
	} else {
		var filter = &quot;[tag[channel systemServer]]&quot;;
		context.adaptor.getTiddlerList(context,userParams,config.macros.tiddlyChatterSetup.onGetTiddlerList,filter);
	}
};

config.macros.tiddlyChatterSetup.onGetTiddlerList = function(context,userParams) {
	// collect a list of existing channels to check against
	var channels = [];
	store.forEachTiddler(function(title,tiddler) {
		if (tiddler.isTagged(&quot;systemServer&quot;) &amp;amp;&amp;amp; tiddler.isTagged(&quot;channel&quot;)) {
			channels.push(tiddler);
		}
	});
	// offer a list of channels to subscribe to
	for (var i=0; i&amp;lt;context.tiddlers.length; i++) {
		createTiddlyElement(context.place,&quot;span&quot;,null,null,context.tiddlers[i].title);
		var box = createTiddlyCheckbox(context.place,&quot;tick me&quot;,false,function(){
			var subscribeButton = document.getElementById(&quot;subscribeButton&quot;);
			if(this.checked==true) {
				subscribeButton.tiddler_title = this.previousSibling.textContent;
			} else {
				subscribeButton.tiddler_title = &quot;&quot;;
			}
		});
		// if the name of a potential subscription is the same as one of your own channels,
		// flag that to the user
		for (var t in channels) {
			if (channels[t].title == context.tiddlers[i].title) {
				wikify(&quot;// - this could be your own content - learn more [[here|ReciprocalSubscriptions]]//&quot;,context.place);
			}
		}
		createTiddlyElement(context.place,&quot;br&quot;);
	}
	var subscribeButton = createTiddlyButton(context.place,&quot;subscribe&quot;,&quot;Subscribe&quot;,config.macros.tiddlyChatterSetup.onClickSubscribe,null,&quot;subscribeButton&quot;);
	subscribeButton.context = context;
};

// onclick for clicking the subscribe button; 'this' refers to the button
config.macros.tiddlyChatterSetup.onClickSubscribe = function() {
	var tiddler = {};
	var tiddler_title = this.tiddler_title;
	for (var t in this.context.tiddlers) {
		if (this.context.tiddlers[t].title == this.tiddler_title) {
			tiddler = this.context.tiddlers[t];
		}
	}
	if (tiddler) {
		// now copy the tiddler across, adding in the 'subscription' tag and rebuilding the body with the URL
		var adaptor_store = this.context.adaptor.store;
		var type_field = adaptor_store.getTiddlerSlice(tiddler.title,&quot;Type&quot;);
		var workspace_field = adaptor_store.getTiddlerSlice(tiddler.title,&quot;Workspace&quot;);
		var filter_field = adaptor_store.getTiddlerSlice(tiddler.title,&quot;TiddlerFilter&quot;);
		var subscriptionURL = this.context.adaptor.host;
		subscriptionURL = subscriptionURL.replace(/\.html$/g,&quot;.xml&quot;);
		var subscriptionTemplate = &quot;|''Type:''|%0|\n|''URL:''|%1|\n|''Workspace:''|%2|\n|''TiddlerFilter:''|%3|&quot;;
		var text = subscriptionTemplate.format([type_field,subscriptionURL,workspace_field,filter_field]);
		tiddler.tags.push(&quot;subscription&quot;);
		store.saveTiddler(tiddler.title, tiddler.title, text, tiddler.modifier, tiddler.modified, tiddler.tags, tiddler.fields, true, tiddler.created);
		var this_tiddler = story.findContainingTiddler(this);
		story.refreshTiddler(this_tiddler.getAttribute(&quot;tiddler&quot;),this_tiddler.getAttribute(&quot;template&quot;),true);
	} else {
		displayMessage(&quot;problem with matching: &quot; + tiddler_title);
	}
};

// onclick for &quot;new&quot; buttons; 'this' refers to the button
config.macros.tiddlyChatterSetup.reveal = function() {
	var slideBox = this.parentNode.nextSibling;
	var isOpen = slideBox.style.display != &quot;none&quot;;
	if(anim &amp;amp;&amp;amp; typeof Slider == &quot;function&quot;)
		anim.startAnimating(new Slider(slideBox,!isOpen,null,&quot;none&quot;));
	else
		slideBox.style.display = isOpen ? &quot;none&quot; : &quot;block&quot;;
};

// Extension to TiddlyWiki.js
// Filter a list of tiddlers
TiddlyWiki.prototype.filterTiddlers = function(filter)
{
	var results = [];
	if(filter) {
		var re = /(\w+)|(?:\[([ \w]+)\[([ \w]+)\]\])|(?:\[\[([ \w]+)\]\])/mg;
		var match = re.exec(filter);
		while(match) {
			if(match[1]) {
				var tiddler = this.fetchTiddler(match[1])
				if(tiddler)
					results.push(tiddler);
			} else if(match[2]) {
				if(match[2]==&quot;tag&quot;) {
					this.forEachTiddler(function(title,tiddler) {
						if(tiddler.isTaggedAllOf(match[3].split(&quot; &quot;))) {
							results.push(tiddler);
						}
					});
				}
			} else if(match[4]) {
				var tiddler = this.fetchTiddler(match[4])
				if(tiddler)
					results.push(tiddler);
			}			
			match = re.exec(filter);
		}
	} else {
		this.forEachTiddler(function(title,tiddler) {results.push(tiddler);});
	}
	return results;
};
&lt;/pre&gt;</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#%5B%5BtiddlyChatterSetup%20code%5D%5D</link>
<pubDate>Tue, 02 Oct 2007 09:55:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
<item>
<title>File adaptor filter plugin</title>
<description>&lt;pre&gt;// Gets the list of tiddlers within a given workspace
FileAdaptor.prototype.getTiddlerList = function(context,userParams,callback,filter)
{
	if(!this.store)
		return FileAdaptor.NotLoadedError;
	if(!context)
		context = {};
//	context.tiddlers = [];
//	this.store.forEachTiddler(function(title,tiddler)
//		{
//		var t = new Tiddler(title);
//		t.text = tiddler.text;
//		t.modified = tiddler.modified;
//		t.modifier = tiddler.modifier;
//		t.fields['server.page.revision'] = tiddler.modified.convertToYYYYMMDDHHMM();
//		t.tags = tiddler.tags;
//		context.tiddlers.push(t);
//		});
	context.tiddlers = this.store.filterTiddlers(filter);
	for(var t=0; t&amp;lt;context.tiddlers.length; t++) {
		context.tiddlers[t].fields['server.page.revision'] = context.tiddlers[t].modified.convertToYYYYMMDDHHMM();
	}
	context.status = true;
	window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};
&lt;/pre&gt;</description>
<category>systemConfig</category>
<category>TiddlyChatter</category>
<link>http://www.tiddlywiki.com/#%5B%5BFile%20adaptor%20filter%20plugin%5D%5D</link>
<pubDate>Mon, 01 Oct 2007 16:36:00 GMT</pubDate>
<author>Jon Lister</author>
</item>
</channel>
</rss>