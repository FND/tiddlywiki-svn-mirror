<div title="Details" modifier="JonLister" created="200806091306" modified="200806091306">
<pre>Here's what's meant to happen:
#You send your update to Twitter ending with 'L:location' (from your phone)
#TiddlyCity collects your update from Twitter and turns it into a tiddler (TwitterTimelinePlugin)
#...it uses Google local search to get an address (GoogleLocalSearchPlugin)
#Your tweets are displayed on a Yahoo! map (YahooSimpleMapsAPI plugin)
#You can export a KML file for putting online and importing into e.g. Google MyMaps (TiddlyTemplatingPlugin)

And for working with your friends;
#You can download tweets from as many Twitter id's as you like...

Things I'm thinking about...
#Adding an interface to edit location strings in a tweet and refresh the location information
**...implies we'd want a visualization for the fields so you can see the stored location info
#Add an interface to delete/ignore tweets
#Visualizing tweets
#Using GeoNames.org to power the location lookup (previously it's looked like the API has been down)
#Auto-saving the KML file to your Google pages account
#Creating a generic visualization for XMLHttpRequests that makes the application less "quiet" when up/downloads are going on

!Dev

Inputs:
#Your Twitter ID
#Your city (not done)

References:
#Yahoo! Simple Maps API - http://developer.yahoo.com/maps/simple/V1/
#Twitter timeline (most recent 20) in JSON - http://twitter.com/statuses/user_timeline/jayfresh.xml?since_id=LAST_KNOWN_TWEET_ID
#Google local search in REST - http://ajax.googleapis.com/ajax/services/search/local?v=1.0&q=Wenlock%20Arms%20N1%20London

Running headless:
{{{
// get the Twitter updates and the geodata for them
var twitter = new TwitterTimeline();
twitter.getUpdates('jayfresh',TiddlyCity.TweetToTiddler);
// display the updates on a map
var ylocal = new YahooMapsSimpleAPI();
var tiddlers = store.getTaggedTiddlers('tweet');
for (var i=0;i<tiddlers.length;i++) {
	ylocal.addElement(tiddlers[i]);
}
ylocal.displayMap();
TiddlyCity.saveKML();
}}}</pre>
</div>